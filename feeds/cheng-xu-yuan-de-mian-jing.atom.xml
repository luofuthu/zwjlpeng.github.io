<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>烟雨林</title><link href="http://www.yanyulin.info/" rel="alternate"></link><link href="http://www.yanyulin.info/feeds/cheng-xu-yuan-de-mian-jing.atom.xml" rel="self"></link><id>http://www.yanyulin.info/</id><updated>2014-03-10T00:00:00+08:00</updated><entry><title>阿里巴巴校招面经2014年软件研发面经</title><link href="http://www.yanyulin.info/pages/2014/03/ali_4.html" rel="alternate"></link><updated>2014-03-10T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-10:pages/2014/03/ali_4.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;最近招聘好多，发个面试经历刻不容缓&lt;/p&gt;
&lt;p&gt;闲话我会写少一点，减少小伙伴们阅读的时间&lt;/p&gt;
&lt;p&gt;先祝小伙伴们旗开得胜&lt;/p&gt;
&lt;p&gt;星期一晚上收到通知，预约到星期二早上面试，选了10点，最早的一轮，研发工程师&lt;/p&gt;
&lt;p&gt;面试官很和蔼，握手，笑容，虐了你也笑。面试官叫做冥志&lt;/p&gt;
&lt;p&gt;自我介绍&lt;/p&gt;
&lt;p&gt;1、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;cal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//给定一个无符号整型，求十进制上出每一位数字的和&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2、&lt;/p&gt;
&lt;p&gt;给定1~100整数，确定的1~100，即1、2、3、。。。100&lt;/p&gt;
&lt;p&gt;3、&lt;/p&gt;
&lt;p&gt;有1个缺了怎么办？  //扫一遍求和减去sum，水题&lt;/p&gt;
&lt;p&gt;4、&lt;/p&gt;
&lt;p&gt;继续问，缺2个呢，想了一下，说，其实这题我看过，不过实在是忘记了...没办法，排序吧  &lt;/p&gt;
&lt;p&gt;5、&lt;/p&gt;
&lt;p&gt;给一叠52张牌，其中10张向上，42张向下，现在你在一个黑麻麻的屋子里，让你把这一堆牌分成两堆（没要求数量一样），要求两堆牌中向上的牌的数量一样。&lt;/p&gt;
&lt;p&gt;一看就是无解题，想了很久说不会，面试官说没事，这个需要跳跃性思维&lt;/p&gt;
&lt;p&gt;6、&lt;/p&gt;
&lt;p&gt;一下位运算的操作：一个数字，化成二进制，交换奇偶位置。&lt;/p&gt;
&lt;p&gt;我写了个o(log)，问我怎么优化。&lt;/p&gt;
&lt;p&gt;我说log那个量可以写成常量。&lt;/p&gt;
&lt;p&gt;最后写成了o(1)的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x55555555&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x55555555&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一个数字*7，怎么写比较快&lt;/p&gt;
&lt;p&gt;一开始傻逼了，后来改正了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;7、&lt;/p&gt;
&lt;p&gt;进程和线程的区别。//烂大街了吧&lt;/p&gt;
&lt;p&gt;8、&lt;/p&gt;
&lt;p&gt;问了一下多态。//秒了，我暑假把c++primer看了一遍的。呵呵。&lt;/p&gt;
&lt;p&gt;9、&lt;/p&gt;
&lt;p&gt;问我多态怎么实现，不是代码怎么实现，是编译器怎么实现。&lt;/p&gt;
&lt;p&gt;我说虚表。&lt;/p&gt;
&lt;p&gt;10、&lt;/p&gt;
&lt;p&gt;然后问虚表是什么时候做的。我说我猜是编译的时候就做好了，然后再继续虚表的细节，我都猜了&lt;/p&gt;
&lt;p&gt;11、&lt;/p&gt;
&lt;p&gt;问了一下课程有哪些，喜欢哪些，我说除了算法数据结构之外，操作系统还可以&lt;/p&gt;
&lt;p&gt;问我分数，自豪答我数据结构100，屌丝地说操作系统什么的80+，幸好他不是广工的&lt;/p&gt;
&lt;p&gt;那你喜欢操作系统，哪一块？调度还是存储还是。。？&lt;/p&gt;
&lt;p&gt;进程什么的吧。&lt;/p&gt;
&lt;p&gt;优先级翻转是什么？有了解吗？&lt;/p&gt;
&lt;p&gt;硬着头皮答了一下，回来查了一下，丢脸了&lt;/p&gt;
&lt;p&gt;然后聊了一下人生，聊了一下其他。好像没了，可能有漏了题目，我记起来的话会编辑这篇文章&lt;/p&gt;
&lt;p&gt;握手，言谢。让我出去等，说要给组织人员反馈&lt;/p&gt;
&lt;p&gt;等了一下通知我继续面。&lt;/p&gt;
&lt;p&gt;进到去发现有两个人，介绍之后，女的是技术，男的是hr&lt;/p&gt;
&lt;p&gt;说这是因为你走了绿色通道，这是终面&lt;/p&gt;
&lt;p&gt;我说我啊？我没走绿色通道啊&lt;/p&gt;
&lt;p&gt;hr说反正这就是终面啦，哈哈&lt;/p&gt;
&lt;p&gt;坐下来他们看简历，和我聊天了两句，赞了一下我的手机号 几乎对称，问我是不是自己买的，我说学校发的&lt;/p&gt;
&lt;p&gt;也赞我确实拿了挺多奖啊，（其实是面试官不知道acm，知道acm都知道我的奖不多了），礼貌说了谢谢&lt;/p&gt;
&lt;p&gt;坐下来就问我课程，可能上一面的记录有，就问到操作系统的课程实验难道没有做个系统啊什么的？&lt;/p&gt;
&lt;p&gt;我说没有，都是模拟的，她说怎么模拟，我都不敢说了，人家都是内核级别的模拟，我们都应用级别的模拟，
我怎么敢说，丢广工脸啊&lt;/p&gt;
&lt;p&gt;然后就问我你读内核读哪个版本的源码。我说，呵呵&lt;/p&gt;
&lt;p&gt;然后针对我的屌丝项目问了一下，给我加了需求，让我解决&lt;/p&gt;
&lt;p&gt;明显是解决不了的嘛= =...&lt;/p&gt;
&lt;p&gt;架构上就决定了我那个项目多屌丝了&lt;/p&gt;
&lt;p&gt;然后问我acm那块，说算法。指明了问图轮，可能面试官熟悉&lt;/p&gt;
&lt;p&gt;就给她说了个最短路，吊她胃口，然后在用个堆优化一下，杠杠的&lt;/p&gt;
&lt;p&gt;然后聊了一下以后的发展，好奇什么技术什么的&lt;/p&gt;
&lt;p&gt;其中我说到 云存储还可以做，但是云计算暂时不能做&lt;/p&gt;
&lt;p&gt;然后她很热情给我讲了其实还有很多可以做的，而且比较成熟&lt;/p&gt;
&lt;p&gt;可能她内部有开源资料？羡慕&lt;/p&gt;
&lt;p&gt;然后hr问了两个问题，兴趣爱好，篮球和吉他。其实还有一个，女人。当然，我没说&lt;/p&gt;
&lt;p&gt;最后到我提问的环节，我反问了技术面试官对我指导一下，她很热情“你的基础还挺扎实 //这是我最开心的一句话了，我暑假恶补了，暑假前有面试官说过我基础不扎实&lt;/p&gt;
&lt;p&gt;就是做的东西比较少，&lt;/p&gt;
&lt;p&gt;有一些东西你要多尝试去做，&lt;/p&gt;
&lt;p&gt;发挥你的想象力，&lt;/p&gt;
&lt;p&gt;现存很多解决问题的方法都是很简单的，&lt;/p&gt;
&lt;p&gt;就是需要有人敢做。&lt;/p&gt;
&lt;p&gt;多读读别人的源码，&lt;/p&gt;
&lt;p&gt;了解别人的意图，&lt;/p&gt;
&lt;p&gt;不想我们以前很封闭。//确实，她看起来30+岁，目测也是个技术大牛。&lt;/p&gt;
&lt;p&gt;”//大概这么多，可能我忘记了。&lt;/p&gt;
&lt;p&gt;说一周内有消息。&lt;/p&gt;
&lt;p&gt;点头感谢，溜人。&lt;/p&gt;
&lt;p&gt;感谢读完，小伙伴们加油&lt;/p&gt;</summary><category term="阿里面经"></category></entry><entry><title>CVTE校园招聘面经2014年软件研发面经</title><link href="http://www.yanyulin.info/pages/2014/03/cvte_2014_1.html" rel="alternate"></link><updated>2014-03-10T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-10:pages/2014/03/cvte_2014_1.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CVTE&lt;/code&gt;集团成立于2003年，总部位于广州科学城，建筑面积2万平方米，旗下设有多家独立的子公司，在香港设有全球服务中心，在国内设有26个营销服务中心和近1000个售后服务网点。CVTE目前致力于多类相关产品的研发、销售和内容服务，包括液晶电视主板设计、电源设计、移动互联、智能机顶盒、商用显示、工业设计、嵌入式游戏、医疗和教育等产业方向&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;面试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CVTE之前实习的时候有投过，也写了第一次面经，其实投的时候感觉没有合适的岗位，最后还是投了&lt;/p&gt;
&lt;p&gt;因为听说福利好&lt;/p&gt;
&lt;p&gt;流程：在线评测 -》 一面hr面 -》 笔试 -》 二面技术面 -》 终面&lt;/p&gt;
&lt;p&gt;一面收简历并筛掉一部分人,我报的是windows方向的，笔试的题目没有算法题，有概念题，翻译题什么的&lt;/p&gt;
&lt;p&gt;过了笔试后，第二天坐车去他们公司，他们公司的技术面没有其他公司的技术面问得那么久，也没其他公司难&lt;/p&gt;
&lt;p&gt;第二天晚上收到终面的通知，我一开始以为很大机会有Offer，结果就跪在hr面上了...&lt;/p&gt;
&lt;p&gt;扣分点回想起来大概是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、cvte一开始投的时候要回答一些问题，这里是有伏笔的，终面的时候会围绕着这些问题问，我终面的时候没有想到这个问题，估计扣了不少分&lt;/p&gt;
&lt;p&gt;2、而且当时同组的8,9个人里面就我一个没有装正装（其实搞技术去其他公司的一般不用的）&lt;/p&gt;
&lt;p&gt;3、他们说我说话太小声了，表达得也不好&lt;/p&gt;
&lt;p&gt;4、别人在讲的时候，她们会留意其他人在有没有在听（难怪有的人好像很有经验，一坐下来就拿着纸和笔）。忙了几天就这样被鄙视了，感觉很压抑。&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="腾讯面经"></category></entry><entry><title>创新工场校园招聘面经面试经验2014年研发类</title><link href="http://www.yanyulin.info/pages/2014/03/cxgc_2014_1.html" rel="alternate"></link><updated>2014-03-10T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-10:pages/2014/03/cxgc_2014_1.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;以下记录的是我的创新工场一面经历&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一面时主要问的是算法，问了我两个算法，如下所示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一、输入字符串：AB123abd32HDU, 输出：12233ABDHUabd  时间复杂度：O（N）&lt;/p&gt;
&lt;p&gt;我写的代码如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="vi"&gt;#include&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;iostream&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;using&lt;/span&gt; &lt;span class="nx"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;;
    int hash&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;63&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;={0};
    cout&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&amp;quot;input:&amp;quot;;
    cin&amp;gt;&amp;gt;str;
    for (int i=0;i&lt;span class="nt"&gt;&amp;lt;strlen&lt;/span&gt;&lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;str&lt;/span&gt;&lt;span class="err"&gt;);&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="err"&gt;++)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;if&lt;/span&gt; &lt;span class="err"&gt;((&lt;/span&gt;&lt;span class="na"&gt;str&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;#39;&lt;/span&gt;&lt;span class="na"&gt;0&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;||&lt;/span&gt;&lt;span class="na"&gt;str&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;#39;9&amp;#39;)&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt;(str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&amp;#39;A&amp;#39;||str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&amp;gt;&amp;#39;Z&amp;#39;)&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt;(str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&amp;#39;a&amp;#39;||str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&amp;gt;&amp;#39;z&amp;#39;))
        {
            cout&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&amp;quot;invalid input!\n&amp;quot;;
            break;
        }
        if (str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&amp;gt;=&amp;#39;0&amp;#39;&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt;str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;=&amp;#39;9&amp;#39;)
        {
            hash&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;-&amp;#39;0&amp;#39;]++;
        }
        if (str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&amp;gt;=&amp;#39;A&amp;#39;&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt;str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;=&amp;#39;Z&amp;#39;)
        {
            hash&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;-&amp;#39;A&amp;#39;+10]++;
        }
        if (str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&amp;gt;=&amp;#39;a&amp;#39;&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt;str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;=&amp;#39;z&amp;#39;)
        {
            hash&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;-&amp;#39;a&amp;#39;+36]++;
        }
    }
    int j=0;
    cout&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&amp;quot;\noutput:&amp;quot;;
    for (i=0;i&lt;span class="nt"&gt;&amp;lt;10&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="err"&gt;++)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;while&lt;/span&gt; &lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;0)
        {
            str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;=i+&amp;#39;0&amp;#39;;
            hash&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;--;
        }
    }

    for (i=10;i&lt;span class="nt"&gt;&amp;lt;36&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="err"&gt;++)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;while&lt;/span&gt; &lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;0)
        {
            str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;=i-10+&amp;#39;A&amp;#39;;
            hash&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;--;
        }
    }
    for (i=36;i&lt;span class="nt"&gt;&amp;lt;62&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="err"&gt;++)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;while&lt;/span&gt; &lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;0)
        {
            str&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;=i-36+&amp;#39;a&amp;#39;;
            hash&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;--;
        }
    }
    cout&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;str&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;endl&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="na"&gt;return&lt;/span&gt; &lt;span class="na"&gt;0&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;二、实现归并排序的非递归算法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下面几个问题，是其他面试官问我们班同学的算法：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、一串数字的每两个数之间的差值是1或者-1，给定一个数N，求如何找到第一个N的位置，如：&lt;code&gt;3,4,3,2,1,2,3,4,3,4,5,6,5&lt;/code&gt;，求第一个5所在的位置。&lt;/p&gt;
&lt;p&gt;2、手机上玩的连连看，用什么算法可以找到两个相同的字符。（&lt;code&gt;BFS&lt;/code&gt;算法）&lt;/p&gt;
&lt;p&gt;3、一群大雁在空中假设一字排开，如果每个大雁之间的前后距离不超过n，切任意两个大雁之间前后的距离只能是1-n的整数，同时不允许大雁之间出现交叉情况，即每个大雁只能向前方飞行，设计算法，打印出m只大雁之间在空中飞行可能出现的队形 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大家可以参考&lt;/p&gt;</summary><category term="创新工场面经"></category></entry><entry><title>创新工场校园招聘面经面试经验2014年武汉研发类</title><link href="http://www.yanyulin.info/pages/2014/03/cxgc_2014_2.html" rel="alternate"></link><updated>2014-03-10T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-10:pages/2014/03/cxgc_2014_2.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;本人没进面试，下面是身边同学的面试题目&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、如何优化快速排序&lt;/p&gt;
&lt;p&gt;在这里我用的是&lt;code&gt;Median Of Three Partitioning&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="vi"&gt;#include&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;iostream&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;using&lt;/span&gt; &lt;span class="nx"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="bp"&gt;void&lt;/span&gt; &lt;span class="nx"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;int&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;partition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt; &lt;span class="kd"&gt;data&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;, int low, int high)
{
    int pivot = data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;;
    int i = low - 1;
    int j = high;

    while (1)
    {
        while (data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt; pivot&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;
        &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt;

        &lt;span class="na"&gt;while&lt;/span&gt; &lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; pivot)
        {
            if (j == low)
            {
                break;
            }
        }

        if (i &amp;gt;= j)
        {
            break;
        }

        swap(data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;, data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;);
    }

    swap(data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;, data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;);

    return i;
}

void QuickSort(int data&lt;span class="cp"&gt;[]&lt;/span&gt;, int low, int high)
{
    if (low &amp;gt;= high)
    {
        return ;
    }

    int pivot = partition(data, low, high);

    QuickSort(data, low, pivot-1);
    QuickSort(data, pivot+1, high);
}

/*
    函数介绍：Improved QuickSort
    Median-of-Three Partitioning
*/
void QuickSort_Opt(int data&lt;span class="cp"&gt;[]&lt;/span&gt;, int low, int high)
{
    if (low &amp;gt;= high)
    {
        return ;
    }

    int mid = low + (high - low) / 2;

    swap(data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;mid&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;, data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;);  // 用data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;记录middle value，
                                    // 并作为支点
    if (data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;low&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &amp;gt; data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;)
    {
        swap(data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;low&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;, data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;);
    }

    if (data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;low&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &amp;gt; data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;)
    {
        swap(data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;low&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;, data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;);
    }

    if (data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &amp;gt; data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;)
    {
        swap(data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;, data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;);
    }

    int pivot = partition(data, low+1, high-1); // 此处剔除了第一个元素和最后一个元素，
                                                // 因为第一个元素肯定小于支点的值,
                                                //最后一个元素肯定大于支点的值；

    QuickSort_Opt(data, low, pivot-1);
    QuickSort_Opt(data, pivot+1, high);
}

int main()
{
    int data&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; = {1, 3, 5, 7, 9, 2, 4, 6, 8, 10, -1, -3, -5, -7, -9};

    QuickSort_Opt(data, 0, 14);

    for (int i=0; i&lt;span class="nt"&gt;&amp;lt;15&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt; &lt;span class="err"&gt;++&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;cout&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;lt;&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;;&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
    &lt;span class="na"&gt;cout&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;endl&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;

    &lt;span class="na"&gt;system&lt;/span&gt;&lt;span class="err"&gt;(&amp;quot;&lt;/span&gt;&lt;span class="na"&gt;pause&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;);&lt;/span&gt;
    &lt;span class="na"&gt;return&lt;/span&gt; &lt;span class="na"&gt;0&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2、图算法&lt;/p&gt;
&lt;p&gt;最小生成树之Kruskal&lt;/p&gt;
&lt;p&gt;3、如何判断两个节点是不是属于同一棵树？&lt;/p&gt;
&lt;p&gt;考察并查集&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Quick&lt;/span&gt; &lt;span class="n"&gt;Find&lt;/span&gt;

&lt;span class="n"&gt;Quick&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;

&lt;span class="n"&gt;Weighted&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;quick&lt;/span&gt; &lt;span class="k"&gt;union&lt;/span&gt;

&lt;span class="n"&gt;Weighted&lt;/span&gt; &lt;span class="n"&gt;quick&lt;/span&gt; &lt;span class="k"&gt;union&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt; &lt;span class="n"&gt;compression&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;halving&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4、虚函数表放在什么地方？&lt;/p&gt;
&lt;p&gt;根据网上查资料，得出结论是虚函数表在Linux/Unix中存放在可执行文件的只读数据段中（rodata），在微软的编译器中，虚函数表存放在常量段中&lt;/p&gt;</summary><category term="创新工场面经"></category></entry><entry><title>华为校园招聘面试经验2014年软件研发武汉区</title><link href="http://www.yanyulin.info/pages/2014/03/huawei_2014_B.html" rel="alternate"></link><updated>2014-03-10T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-10:pages/2014/03/huawei_2014_B.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;华为，我们不仅仅是世界500强&lt;/strong&gt;，这是今年华为校招时的口号~~~&lt;/p&gt;
&lt;p&gt;华为要想进行面试，面试之前必须要过机试，机试有三道题，只要做对一道，就有机会进入面试，但是推荐大家还是全做完，也不是很难，而且要尽快做完，因为成绩的取得要依赖于做题的时间，答对的题数，提交的次数...&lt;/p&gt;
&lt;p&gt;我应聘的是&lt;code&gt;研究工程师&lt;/code&gt;，面试问的全是项目&lt;/p&gt;
&lt;p&gt;一面和终面都问的&lt;code&gt;项目&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所以项目是很重要的&lt;/p&gt;
&lt;p&gt;研发类岗位问的都是一些基础的东西&lt;/p&gt;
&lt;p&gt;基本上会让女生写个程序，男生就问问技术知识&lt;/p&gt;
&lt;p&gt;其中的一个写程序的题目：&lt;/p&gt;
&lt;p&gt;一个&lt;code&gt;双向链表&lt;/code&gt;，如何实现对其进行排序&lt;/p&gt;
&lt;p&gt;基础类题目：&lt;/p&gt;
&lt;p&gt;如TCP协议的三次握手，四次分手等&lt;/p&gt;
&lt;p&gt;再有，就是华为一直强调的就是能吃苦，因此面试结束之后，一定会问你，你能吃苦嘛&lt;/p&gt;
&lt;p&gt;答案我想只要你不是傻子，基本上都会说，肯定能，还会搞两个例子出来说明一下，自已能吃苦~~~&lt;/p&gt;</summary><category term="华为面经"></category></entry><entry><title>美团网校园招聘面经2014年软件研发</title><link href="http://www.yanyulin.info/pages/2014/03/meituan_2014_2.html" rel="alternate"></link><updated>2014-03-10T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-10:pages/2014/03/meituan_2014_2.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;从半年前开始找工作，一路被鄙视到现在。以至于面了一些公司也不敢发帖写面经了&lt;/p&gt;
&lt;p&gt;作为一个没有项目经验的渣渣，一开始问啥啥都不会，&lt;/p&gt;
&lt;p&gt;回忆一下，半年前找实习的时候，我第一次笔试和面试都给了&lt;code&gt;CVTE&lt;/code&gt;，当时因为选错方向就跪了。腾讯实习的时候也是选错方向，加上基础差，没经验也跪了。也不怕死的投了微软，做了一份全英的试题。还有UC的笔试之类的，最后都没过。然后我就决定暑假恶补基础，暑假回家之后由于一些原因决定卖队友大四不参加比赛了，不过那时候没怎么练也打不过师弟师妹们了，还不如把机会让给他们去练练&lt;/p&gt;
&lt;p&gt;九月份一开始我就基本上有校园招聘并且在广州有考场的公司都投了简历,第一场笔试应该是美团网的，一开始我不知道有这个，同学说明天就要截止了就顺手投了一份&lt;/p&gt;
&lt;p&gt;美团的笔试题：&lt;/p&gt;
&lt;p&gt;&lt;a  href="http://www.yanyulin.info/pages/2014/03/meituan_2014_B.html" target="_blank"&gt;美团网校招笔试题2014年研发东北&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;还好数学题我会，前5道都做出来了，第6道做过反而没写完...&lt;/p&gt;
&lt;p&gt;剑指Offer里面第一道题就是，&lt;code&gt;O(n+m)&lt;/code&gt;的解法就5行吧，之前看过二分的写法而且一个星期前还敲过，最后居然没写不出来，只写了个想法...&lt;/p&gt;
&lt;p&gt;之后收到第二天的面试通知&lt;/p&gt;
&lt;p&gt;一面问了一些基础问题&lt;/p&gt;
&lt;p&gt;C++类的……之类的&lt;/p&gt;
&lt;p&gt;有一道算法题，叫你写出 将1到n按字典序排序输出的程序&lt;/p&gt;
&lt;p&gt;二面的时候也问了&lt;/p&gt;
&lt;p&gt;一些C++的基础题，&lt;/p&gt;
&lt;p&gt;还有 求第k大数 这类问题网上都有详细的解法，我就不说了&lt;/p&gt;
&lt;p&gt;还问了一些关于优化的问题，具体忘了，反正答得不顺利，表现不好，面试官叹了几声气&lt;/p&gt;
&lt;p&gt;我就有种不详的预感了，最后他用两个问题把我秒了&lt;/p&gt;
&lt;p&gt;问：你操作系统，数据库，网络哪个学得好?(其实我感觉都没学好)&lt;/p&gt;
&lt;p&gt;答：操作系统……吧&lt;/p&gt;
&lt;p&gt;问：CPU的调度算法有哪些？&lt;/p&gt;
&lt;p&gt;答：……（我只知道进程的）&lt;/p&gt;
&lt;p&gt;之后问了一些linux的操作命令，例如：软链接和硬链接是什么？&lt;/p&gt;
&lt;p&gt;二面就结束了。之后没有接到三面。&lt;/p&gt;</summary><category term="美团面经"></category></entry><entry><title>湖南麒麟校园招聘面经2014年软研面经</title><link href="http://www.yanyulin.info/pages/2014/03/qilin_2014_1.html" rel="alternate"></link><updated>2014-03-10T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-10:pages/2014/03/qilin_2014_1.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;湖南麒麟&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;湖南麒麟信息工程技术有限公司&lt;/code&gt;，暨操作系统湖南省工程研究中心，2011年正式升级为国家地方联合工程研究中心，是由湖南省发改委批复的高科技实体。公司以国防科技大学计算机学院为依托，吸收了 国内的优秀技术资源和资本，致力于基础软件的研究与发展。公司总部座落于长沙，设有研发、测试、生产等职能部门，并在北京设立了营销和技术服务中心。公司 坚持“科技成果产业化、运行机制企业化、发展方向市场化”的发展思路；倡导创新文化，鼓励员工积极参与技术创新；重视企业制度建设，形成了以人为本的现代 化管理制度...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;评价&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对该公司不是很了解，不作评论&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重点，面试感觉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;地点：华科8号楼415&lt;/p&gt;
&lt;p&gt;问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、内核安全？&lt;/p&gt;
&lt;p&gt;2、缓冲区溢出是什么造成的？&lt;/p&gt;
&lt;p&gt;3、内存泄露是怎么造成的？内存出错？&lt;/p&gt;
&lt;p&gt;4、在一个局部函数内malloc，malloc是在堆上还是在栈上，函数结束时内存发生什么变化？&lt;/p&gt;
&lt;p&gt;5、堆和栈的区别？&lt;/p&gt;
&lt;p&gt;6、什么情况下定义变量是在堆上？什么情况下定义变量是在栈上？&lt;/p&gt;
&lt;p&gt;7、对linux内核的了解程度？&lt;/p&gt;
&lt;p&gt;8、函数指针用在什么情况下？为什么不直接使用函数名而去使用函数指针？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;湖南麒麟待遇：&lt;code&gt;5.5K*16&lt;/code&gt; 硕士&lt;/p&gt;</summary><category term="其他面经"></category></entry><entry><title>腾讯校园招聘面经2014年软件研发面经</title><link href="http://www.yanyulin.info/pages/2014/03/tencent_2014_1.html" rel="alternate"></link><updated>2014-03-10T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-10:pages/2014/03/tencent_2014_1.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;腾讯校招，之前有内推过广研，不过失败了，不知道是否有不良记录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;笔试题目大部分人应该已经都做过，网上也有，就不说了&lt;/p&gt;
&lt;p&gt;一面的流程大概是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、介绍自己，讲一下自已的项目经验，问一些技术相关的问题，然后是面试官提问&lt;/p&gt;
&lt;p&gt;2、他问我的问题大概是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、tcp协议的三次握手&lt;/p&gt;
&lt;p&gt;2、10亿个数找中位数，写代码&lt;/p&gt;
&lt;p&gt;3、链表反转&lt;/p&gt;
&lt;p&gt;4、非递归的二分查找&lt;/p&gt;
&lt;p&gt;5、linux的一些命令&lt;/p&gt;
&lt;p&gt;6、字符串去空格和制表符&lt;/p&gt;
&lt;p&gt;7、C++类的一些问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;总体来说都比较基础，还有一些我忘了&lt;/p&gt;
&lt;p&gt;不过在面试的时候他让我看了笔试的成绩，然后我提问的时候问了两个问题&lt;/p&gt;
&lt;p&gt;我的问题：&lt;/p&gt;
&lt;p&gt;1.问：这次招聘的比例大概多少？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答：今年应该挺大，今年的笔试成绩都挺不错（也不可能说出具体的数字，不过可能意思的招的比以前多吧）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2、问：我的笔试成绩大概排多少？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答：你自己觉得呢（本来想试探一下的，不过没问出什么来）之后过了一面，到昨天的中午才收到二面短信&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;二面的面试官一般是主管来着，我的那个面试官没怎么问技术的，就基本上像是在聊天&lt;/p&gt;
&lt;p&gt;中间跟我说，他手上的几份简历中只有我一个是本科的，其他都是中科大，华工什么的，其中一个英语过了专业八级...&lt;/p&gt;
&lt;p&gt;我顿时吓尿了，然后他又安慰我说我的笔试成绩比他们高，他们会公平考虑的，然后我直接地问二面会筛多少人，他明确的告诉我他最终只能给两个Offer&lt;/p&gt;
&lt;p&gt;然后今天中午收到他的电话，叫我等hr面，顿时有点激动&lt;/p&gt;
&lt;p&gt;不过短信通知是到27号才hr面的。其实我挺当心hr面会挂了，自从上次被cvte鄙视了之后..，现在结果如何还是未知数，只能自求多福了。如果能过的话，那也是运气好而已，也许是笔试成绩还行吧&lt;/p&gt;
&lt;p&gt;作为一个弱菜，我只能说说自己面试了几次之后的一些看法：&lt;/p&gt;
&lt;p&gt;1、最好的面经是一定是在自己面试的过程中积累的。网上的那些只能作为参考。每个人的情况都不一样，自己缺什么就重点补那方面的知识。&lt;/p&gt;
&lt;p&gt;2、面试题大部分都雷同（我只能这么说），大部分题目一般解法巧妙，大部分人短时间内做不出来，这很正常的，不然出这题干嘛。所以要多上网做一些题目，其实有时候打不出来也不一定就没戏，他主要还是看你面对难题的想法。&lt;/p&gt;
&lt;p&gt;3、面试过程一般会手写一些比较短又常用的代码，要多点积累。&lt;/p&gt;
&lt;p&gt;推荐搞IT技术的看两本书：《剑指Offer》《编程之美》讲得很好的两本书，对面试很有用&lt;/p&gt;
&lt;p&gt;然后就是具体方向看具体哪一方面的一些面试题了&lt;/p&gt;
&lt;p&gt;面试书下载&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2014/03/offer.html" target="_blank"&gt;
剑指offer下载
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2014/02/pbaodian.html" target="_blank"&gt;
程序员面试宝典下载
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2013/12/prgbeautiful.html" target="_blank"&gt;
编程之美—微软技术面试心得
&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="腾讯面经"></category></entry><entry><title>腾讯校园招聘笔试题目2012年软件研发类</title><link href="http://www.yanyulin.info/pages/2014/03/tencent_2014_A.html" rel="alternate"></link><updated>2014-03-10T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-10:pages/2014/03/tencent_2014_A.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;1、请定义一个宏，比较两个数a、b 的大小，不能使用大于、小于、if 语句&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#define max(a,b) (((a-b)&amp;amp;(1&amp;lt;&amp;lt;31))?(b):(a))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2、如何输出源文件的标题和目前执行行的行数&lt;/p&gt;
&lt;p&gt;1）&lt;code&gt;__DATE__&lt;/code&gt;：当前文件的编译日期。与在&lt;code&gt;time.h&lt;/code&gt;中定义的&lt;code&gt;asctime&lt;/code&gt;函数返回的格式一样，即是&lt;code&gt;Mmm DD yyyy（月、日、年)&lt;/code&gt;；&lt;/p&gt;
&lt;p&gt;2)&lt;code&gt;__FILE__&lt;/code&gt;：当前源文件的名称。字符串格式&lt;code&gt;（const char）&lt;/code&gt;；&lt;/p&gt;
&lt;p&gt;3）&lt;code&gt;__LINE__&lt;/code&gt;：当前代码在源文件中的行数。一个整数。&lt;/p&gt;
&lt;p&gt;4)&lt;code&gt;__TIME__&lt;/code&gt;：当前源文件的编译时间。一个字符串（hh:mm:ss)；&lt;/p&gt;
&lt;p&gt;5）&lt;code&gt;__TIMESTAMP__&lt;/code&gt;：当前源文件最后编译的日期时间。一个字符串（格式为：&lt;code&gt;Ddd Mmm Date hh:mm:ss yyyy&lt;/code&gt;，即星期几、月、日、时、分、秒、年）；&lt;/p&gt;
&lt;p&gt;其中通过宏&lt;code&gt;__FILE__&lt;/code&gt;和&lt;code&gt;__LIEN__&lt;/code&gt;可以快速的定位程序出错的文件和位置，并通过&lt;code&gt;Email&lt;/code&gt;的形式发送给开发人员，从而进行快速维护。&lt;/p&gt;
&lt;p&gt;3、两个数相乘，小数点后位数没有限制，请写一个高精度算法纪录小数点在a,b中的位置去掉a,b中的小数点&lt;/p&gt;
&lt;p&gt;计算c=a*b; （同整数的大数相乘算法）加上小数点&lt;/p&gt;
&lt;p&gt;4、有A、B、C、D 四个人，要在夜里过一座桥。他们通过这座桥分别需要耗时1、2、5、10 分钟，只有一支手电，并且同时最多只能两个人一起过桥。&lt;/p&gt;
&lt;p&gt;请问，如何安排，能够在17 分钟内这四个人都过桥？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;去：&lt;/span&gt;&lt;span class="n"&gt;AB&lt;/span&gt;&lt;span class="o"&gt;---------------------------------&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="err"&gt;回：&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;-----------------------------------&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="err"&gt;去：&lt;/span&gt;&lt;span class="n"&gt;CD&lt;/span&gt;&lt;span class="o"&gt;---------------------------------&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="err"&gt;回：&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;------------------------------------&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="err"&gt;去：&lt;/span&gt;&lt;span class="n"&gt;AB&lt;/span&gt;&lt;span class="o"&gt;----------------------------------&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5、C++将父类的析构函数定义为虚函数，下列正确的是哪个？&lt;/p&gt;
&lt;p&gt;A、释放父类指针时能正确释放子类对象&lt;/p&gt;
&lt;p&gt;B、释放子类指针时能正确释放父类对象&lt;/p&gt;
&lt;p&gt;C、这样做是错误的&lt;/p&gt;
&lt;p&gt;D、以上全错&lt;/p&gt;
&lt;p&gt;C++的多态肯定是使用父类的指针指向子类的对象，所以肯定是释放子类的对象，如果不使用虚函数的话，父类的指针就只能够释放父类的对象。&lt;/p&gt;
&lt;p&gt;6、&lt;code&gt;typedef char *String_t&lt;/code&gt;; 和 &lt;code&gt;#define String_d char *&lt;/code&gt;这两句在使用上有什么区别？&lt;/p&gt;
&lt;p&gt;答：typedef char *String_t 定义了一个新的类型别名，有类型检查。而#define String_d char * 只是做了个简单的替换，无类型检查，前者在编译的时候处理，后者在预编译的时候处理。&lt;/p&gt;
&lt;p&gt;7、给定一个字符串，求出其最长的重复子串&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="vi"&gt;#include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;iostream&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;using&lt;/span&gt; &lt;span class="nx"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;=&amp;quot;huahuahuahualkjljlkdf&amp;quot;;
    int len=strlen(str);
    int i;
    int j;
    int k=0;
    int first;
    int max=0;
    for (i=1;i&lt;span class="nt"&gt;&amp;lt;len&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="err"&gt;++)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;for&lt;/span&gt; &lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;j=&lt;/span&gt;&lt;span class="s"&gt;0;j&amp;lt;i;j++)&lt;/span&gt;
        &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;if&lt;/span&gt; &lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;str&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="na"&gt;=&lt;/span&gt;&lt;span class="s"&gt;=str&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s"&gt;)&lt;/span&gt;
            &lt;span class="err"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;k&lt;/span&gt;&lt;span class="err"&gt;++;&lt;/span&gt;
            &lt;span class="err"&gt;}&lt;/span&gt;
            &lt;span class="na"&gt;else&lt;/span&gt;
            &lt;span class="err"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;k=&lt;/span&gt;&lt;span class="s"&gt;0;&lt;/span&gt;
            &lt;span class="err"&gt;}&lt;/span&gt;
            &lt;span class="na"&gt;if&lt;/span&gt; &lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;k&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;max)
            {
                max=k;
                first=j+1-max;
            }
        }
        k=0;
    }

    cout&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&amp;quot;子串长度：&amp;quot;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;max&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;endl&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="na"&gt;for&lt;/span&gt; &lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;i=&lt;/span&gt;&lt;span class="s"&gt;first;i&amp;lt;(first+max);i++)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;cout&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;str&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
    &lt;span class="na"&gt;cout&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;endl&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="na"&gt;return&lt;/span&gt; &lt;span class="na"&gt;0&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;8、给定一个数组a[N],我们希望构造数组b[N]，其中&lt;code&gt;b[i]=a[0]*a[1]*...*a[N-1]/a[i]&lt;/code&gt;。在构造过程：
不允许使用除法；&lt;/p&gt;
&lt;p&gt;要求&lt;code&gt;O(1)&lt;/code&gt;空间复杂度和&lt;code&gt;O(n)&lt;/code&gt;时间复杂度；&lt;/p&gt;
&lt;p&gt;除遍历计数器与&lt;code&gt;a[N] b[N]&lt;/code&gt;外，不可使用新的变量(包括栈临时变量、对空间和全局静态变量等)；&lt;/p&gt;
&lt;p&gt;请用程序实现并简单描述。&lt;/p&gt;
&lt;p&gt;解答：&lt;/p&gt;
&lt;p&gt;迭代计算：&lt;/p&gt;
&lt;p&gt;i前的部分：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="p"&gt;..........&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;i后半部分&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="p"&gt;......&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="vi"&gt;#include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;iostream&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;using&lt;/span&gt; &lt;span class="nx"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="vi"&gt;#define&lt;/span&gt; &lt;span class="nb"&gt;N&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="nx"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;N&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;;
    int b&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;N&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;;
    int i;
    cout&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&amp;quot;请输入&amp;quot;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;N&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;lt;&amp;quot;个数字&amp;quot;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;endl&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="na"&gt;for&lt;/span&gt; &lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;i=&lt;/span&gt;&lt;span class="s"&gt;0;i&amp;lt;N;i++)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;cin&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;gt;a&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;;
    }
    b&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;=1;
    for (i=1;i&lt;span class="nt"&gt;&amp;lt;N&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="err"&gt;++)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="na"&gt; =&lt;/span&gt;&lt;span class="s"&gt;b&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s"&gt;*a&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
    &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="na"&gt;=&lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s"&gt;;&lt;/span&gt;
    &lt;span class="na"&gt;for&lt;/span&gt; &lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;i=&lt;/span&gt;&lt;span class="s"&gt;N-2;i&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;=1;i--)
    {
        b&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; *= b&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;;
        b&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; *= a&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;;
    }
    for (i=0;i&lt;span class="nt"&gt;&amp;lt;N&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="err"&gt;++)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;cout&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;lt;&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;;&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
    &lt;span class="na"&gt;cout&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;endl&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="na"&gt;return&lt;/span&gt; &lt;span class="na"&gt;0&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="腾讯笔试题"></category></entry><entry><title>大众点评校园招聘面经2014年软件面经</title><link href="http://www.yanyulin.info/pages/2014/03/dianping_2014_1.html" rel="alternate"></link><updated>2014-03-08T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-08:pages/2014/03/dianping_2014_1.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;大众点评网简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;大众点评网&lt;/strong&gt;于2003年4月由&lt;code&gt;张涛&lt;/code&gt;成立于上海，是中国领先的本地生活信息及交易平台，同时也是全球最早建立的独立第三方消费点评网站，主要为用户提供各种生活信息服务，时至今日分支机构遍布中国各大主要城市&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重点，面试感觉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;整体来说，对这个公司的印象不是太好，公司面试时过于功利&lt;/p&gt;
&lt;p&gt;它会问你有没有一些其他牛逼公司的offer，你说有的话，他就会很想要你，要是你说没有得话，基本上来说就跪了&lt;/p&gt;
&lt;p&gt;而且大众点评网没有笔试，只有一个上机考试，上机考试考的还有行测，对于一个面技术的人来说，考行测是什么玩意，我从来不看好一个考行测的技术公司，能有多大的前途,我不知道行测能考出啥，在这个奇葩的国度里，我以为只有公务员，事业单位才考，没想到这种技术性的公司也考...&lt;/p&gt;
&lt;p&gt;我面了一面就跪了，写下面试的问题吧，给师弟师妹们多些参考...&lt;/p&gt;
&lt;p&gt;问了我如下问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、面向对象6大原则&lt;/p&gt;
&lt;p&gt;2、java与c++区别&lt;/p&gt;
&lt;p&gt;3、Java虚拟机你了解么？具体讲讲&lt;/p&gt;
&lt;p&gt;4、设计模式singleton，这个要写出代码，也是非常简单的&lt;/p&gt;
&lt;p&gt;5、sleep与wait的区别&lt;/p&gt;
&lt;p&gt;6、object类你了解么，有哪些方法&lt;/p&gt;
&lt;p&gt;7、java里的重载与重写之间的区别&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="大众点评面经"></category></entry><entry><title>华为校园招聘面经2014年软件研发</title><link href="http://www.yanyulin.info/pages/2014/03/huawei_2014_A.html" rel="alternate"></link><updated>2014-03-08T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-08:pages/2014/03/huawei_2014_A.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;华为&lt;/strong&gt;现在已经被黑的很严重了，什么累死了好几个人，什么工资低，什么华为工作比较累，什么加班比较多，等等一系列，大华为已经被好多人黑的不能再黑了，我身边的好多研究生都是将华为作为垫底的，说实在没公司要时，再考虑去华为&lt;/p&gt;
&lt;p&gt;华为今年的工资待遇是&lt;code&gt;11-13K/M&lt;/code&gt;,过年时会考虑发两个月的绩效，说实在的我个人感觉华为还是相当不错滴，都是年轻人嘛，少年时不奋斗，何时奋斗，少年是不艰苦，以后又有何出息，我个人还是非常好看华为滴...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;华为，我们不仅仅是世界500强&lt;/strong&gt;，这是今年华为校招时的口号~~~&lt;/p&gt;
&lt;p&gt;华为要想进行面试，面试之前必须要过机试，机试有三道题，只要做对一道，就有机会进入面试，但是推荐大家还是全做完，也不是很难，而且要尽快做完，因为成绩的取得要依赖于做题的时间，答对的题数，提交的次数...&lt;/p&gt;
&lt;p&gt;面试总共2面:&lt;/p&gt;
&lt;p&gt;第一面&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、问了我一些项目&lt;/p&gt;
&lt;p&gt;2、然后让我写一个从1到n输出所有的素数，这个很简单吧，但是要考虑一下效率呦&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第二面&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、boss，估计看是你适不适合当他小弟&lt;/p&gt;
&lt;p&gt;2、主要问了一下未来得职业规划&lt;/p&gt;
&lt;p&gt;3、你能不能吃苦，这个问题的答案是很显然的吧，如果你答错了，那绝对是2货行为&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="华为面经"></category></entry><entry><title>美团网校园招聘2014年面经(软件研发)</title><link href="http://www.yanyulin.info/pages/2014/03/meituan_2014_1.html" rel="alternate"></link><updated>2014-03-08T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-08:pages/2014/03/meituan_2014_1.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;每一年的&lt;code&gt;九月与十月&lt;/code&gt;都是个心酸的日子，也是个收获的季节，&lt;/p&gt;
&lt;p&gt;在这个&lt;strong&gt;苦逼&lt;/strong&gt;的年代里，在这个为&lt;strong&gt;前途奔波&lt;/strong&gt;的季节，我也不例外，没有什么特殊的机遇，也是经历了一次又一次残酷的海选，海选固然残酷，可我们又能做什么，能做的就是一次又一次的迎头前近，失败了并不可怕，可怕的是失败了后却没有了站起来的勇气...&lt;/p&gt;
&lt;p&gt;现把我经历简单的分享给各位学弟学妹们，希望，学弟学妹们找工作都能够如愿以偿&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://www.yanyulin.info" target="_blank"&gt;个人&lt;/a&gt;对美团感觉的相当不错，面试官非常好&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一面：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、问了我下试卷上的题目&lt;/p&gt;
&lt;p&gt;2、然后问我linux内存管理&lt;/p&gt;
&lt;p&gt;3、STL相关的知识，STL里最起码的你要知道什么是&lt;strong&gt;关联容器&lt;/strong&gt;，什么是&lt;strong&gt;序列式容器&lt;/strong&gt;吧，还有其底层的实现吧&lt;/p&gt;
&lt;p&gt;4、然后让我写一个字符串中最长不重复字符串&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;二面：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、问了一个概率题，具体就不说了&lt;/p&gt;
&lt;p&gt;2、后面算法的问我了一个算法题目（自己出的）&lt;/p&gt;
&lt;p&gt;3、二叉树分层遍历，这个数据结构均有的，自已看看，没有的扔了此书吧，就是采用队列的方式实现&lt;/p&gt;
&lt;p&gt;4、数组中连续和最大值&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这题题，好好看看编程之美与剑指offer,里面也有，下载链接，下面有&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;面试书下载&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2014/03/offer.html" target="_blank"&gt;
剑指offer下载
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2014/02/pbaodian.html" target="_blank"&gt;
程序员面试宝典下载
&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="美团面经"></category></entry><entry><title>威盛电子校园招聘面经2014年软件面经</title><link href="http://www.yanyulin.info/pages/2014/03/weconnect_2014_1.html" rel="alternate"></link><updated>2014-03-08T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-08:pages/2014/03/weconnect_2014_1.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;威盛电子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;威盛电子股份有限公司&lt;/strong&gt;是台湾地区的积体电路设计公司，主要生产主机板的晶片组、中央处理器(CPU)、以及记忆体。它是世界上最大的独立主机板晶片组设计公司。作为一个无晶圆厂半导体厂商（fabless），VIA主要在研究与发展他的晶片组，然后将晶圆制造外包给晶圆厂进行...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重点，面试感觉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;共有3面技术面，然后最后一面是HR面，加起来总共是4面,工资就不透露了，肯定是没互联网公司高&lt;/p&gt;
&lt;p&gt;由于我投的是嵌入式，所以各种问我&lt;code&gt;linux kernel&lt;/code&gt;以及&lt;code&gt;andriod&lt;/code&gt;，其实主要的也就是涉及到Linux下层的内层管理，以及调度算法这一块,当然中间问了一些比较简单算法题目，如以下问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、写了个冒泡排序&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;冒泡排序也有是有效率可言的，大家要把情况考虑详细，如序列已经有序的情况下，冒泡排序的时间复杂度为O(n)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2、实现一个算法，该算法可以求出链表倒数第k个节点（说白了就是快慢指针的问题）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;还是那句好，还是好好看看下面这两本书，不多说&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;面试书下载&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2014/03/offer.html" target="_blank"&gt;
剑指offer下载
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2014/02/pbaodian.html" target="_blank"&gt;
程序员面试宝典下载
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3、然后singleton&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;设计模式中最简单的一种，也是面试中最常让写的一种，因为代码量少，而且很容易考察人思维是否周到&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;</summary><category term="其他面经"></category></entry><entry><title>阿里巴巴校招面经(2014年软件研发)</title><link href="http://www.yanyulin.info/pages/2014/03/ali_3.html" rel="alternate"></link><updated>2014-03-07T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-07:pages/2014/03/ali_3.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;阿里巴巴的面试共分为三面，如果进不了第三面，基本上就是挂了的节奏&lt;/p&gt;
&lt;p&gt;这是我的&lt;a href="http://www.yanyulin.info" title="烟雨林博客"&gt;处男面&lt;/a&gt;啊，第一次就这么没了&lt;/p&gt;
&lt;p&gt;我面了总共有2面&lt;/p&gt;
&lt;p&gt;第一面面技术：&lt;/p&gt;
&lt;p&gt;先问了我一下项目，由于我做&lt;code&gt;ASIC&lt;/code&gt;的，估计他兴趣也不大，问了如下问题：&lt;/p&gt;
&lt;p&gt;1、字符串编辑距离&lt;/p&gt;
&lt;p&gt;2、写出二分查找算法，以及在什么时候会形成死循环&lt;/p&gt;
&lt;p&gt;3、linux进程同步&lt;/p&gt;
&lt;p&gt;4、当发生hash冲突的时候，有什么解决办法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这道题很简单，数据结构上都有，没有的，扔了它，重新买一本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第二面：&lt;/p&gt;
&lt;p&gt;1、还是问了我项目&lt;/p&gt;
&lt;p&gt;2、让我写一个字符串比较函数strcmp，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个也简单，但是要注间的边界条件的判断，写程序思维要严谨&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3、问了我&lt;code&gt;bloom filter&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;搜索引擎中经常使用的一种算法，主要用于判断某个url是否已经拜访过，或者在处理垃圾邮件中也经常使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;感觉整体还可以，可能项目不太相关，没有给我&lt;code&gt;offer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;到此为止&lt;/p&gt;</summary><category term="阿里面经"></category></entry><entry><title>百度校招面经2014年软研面经</title><link href="http://www.yanyulin.info/pages/2014/03/baidu_2.html" rel="alternate"></link><updated>2014-03-07T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-07:pages/2014/03/baidu_2.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;百度面试共分为三面：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;二面技术&lt;/p&gt;
&lt;p&gt;一面boss面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我对百度的印象比较好，由于我不是科班出生，所以在项目方项基本上没问什么，这点很到位，不像我面阿里巴巴，说一句，百度人真的很不错&lt;/p&gt;
&lt;p&gt;一面：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、给你一个整数，找出大于这个数的最小不重复的数，不重复数定义为各位没有连续相同的数。例如，11230是重复的数，12121是不重复的数。 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;暴力破解的人肯定是挂&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2、将整数转成字符串，写出代码；&lt;/p&gt;
&lt;p&gt;3、考查二分查找算法，求恰好大于某个数的数，其实就是用二分法求上界。写出代码；&lt;/p&gt;
&lt;p&gt;4、链表翻转写出代码，这个是考了多少遍臭题，三个指针即可实现；&lt;/p&gt;
&lt;p&gt;5、STL的容器讲解，怎么实现的。包括序列容器和关联容器（内存存局上有内存存，关联容器采用的是红黑树实现较多）；&lt;/p&gt;
&lt;p&gt;6、java的自动回收机制怎么实现的（堆加收的三种实现策略）；&lt;/p&gt;
&lt;p&gt;7、TCP三次握手，怎么关闭连接的（常考的题目）。&lt;/p&gt;
&lt;p&gt;8、linxu进程调度相关的问题；&lt;/p&gt;
&lt;p&gt;9、linux内存管理相关的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这面我大概面了一个多小时，总之可以看出百度考得很广。&lt;/p&gt;
&lt;p&gt;二面:是个美女面试官，我至今记忆尤新，感谢这位前辈，我首先简单的讲了项目吧，然后开始问问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、三次握手；&lt;/p&gt;
&lt;p&gt;2、插入排序写出代码；&lt;/p&gt;
&lt;p&gt;3、考了大数据（曾经遇到一个硕士，尽然不知道什么叫大数据~~）；&lt;/p&gt;
&lt;p&gt;4、求了一道概率题；&lt;/p&gt;
&lt;p&gt;5、一个数组存储了0到n中缺了一个数，怎么求出来；&lt;/p&gt;
&lt;p&gt;6、一个数组存储了0到n中缺了2个数，又怎么求出来；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;三面&lt;/p&gt;
&lt;p&gt;项目经理面，主要问了我下项目，然后问了下我TCP四次握手。算法不怎么问，主要考察你这个人，他想不想要。&lt;/p&gt;
&lt;p&gt;到此为止&lt;/p&gt;</summary><category term="百度面经"></category></entry><entry><title>去哪儿网校招2014年面经</title><link href="http://www.yanyulin.info/pages/2014/01/qunar_1.html" rel="alternate"></link><updated>2014-01-20T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-01-20:pages/2014/01/qunar_1.html</id><summary type="html">&lt;p&gt;面试地点:&lt;strong&gt;沈阳&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;面试职位:&lt;strong&gt;软件研发工程师(北京)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;面试结果:&lt;code&gt;失败&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;去哪儿&lt;/strong&gt;目前来说还是一个比较不错的公司，待遇还行，技术上不是很了解，今年校招待遇一般是&lt;code&gt;11-16k/m&lt;/code&gt;,每年发&lt;code&gt;13&lt;/code&gt;个月的基本工资，三个月的奖金，其中奖金的比例是7：2：1，即&lt;code&gt;10%&lt;/code&gt;的人可能拿不到那三个月的奖金，也就是说其他的人不但能拿到这三个月的奖金而且还可高会高于三个月&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;好处&lt;/strong&gt;讲了这么多，但是去哪儿网这个蛋疼的小公司，面试过程极不规范，而且面试官的水平以及态度个人感觉有待商量，总之给我的感觉很差&lt;/p&gt;
&lt;p&gt;在讲面试前，还是先回忆一下我的悲催经历，参加完去哪网笔试完，个人感觉答的还凑合，在参加笔试前由师姐将我们班的所有人都内推了，师姐说只要是内推的，就一定能进面试，笔试完当天夜晚，去哪网就开始发笔试，一夜间，整个班的人都收到了面试通知，而我没有收到，心凉透了，于是第二天跟着他们前去，准备开始霸面，在哪苦苦求了&lt;code&gt;HR&lt;/code&gt;好久，&lt;code&gt;HR&lt;/code&gt;很勉强的说看看吧，看看下午6点时能不能给你个机会，于是我就开始等，从上午一直等到了下午一点，那个心情呀，哎，下午一点时，我陪同学去看看面试的名单，尽然发现我在名单里(意味着什么，意味着面试名单中有我，而&lt;code&gt;HR&lt;/code&gt;却没有通知到我，面试时间是下午4点钟)，我的心情变的开始激动，人生好像是从大悲到了大喜，下午四点时开始了面试，面我的面试官感觉可不耐心了，可能是太恶了吧，或者面了一天，累了，一会走来走去，给了一支笔，让我写程序，我能说的就是连笔头都没有，写程序的纸，妈的，那叫纸嘛，没地方写啦，面试官态度极差，问的问题，大家看看剑指offer基本上都能搞写，在就是卷子上的题目,我是用C语言写的算法，他让我用Java写，心情失落了一天，这个算法改写成Java写的不是很好，最后还是让我进了二面，能说的还有一个问题，就是面我的面试官面的所有人过的很少，我们班被他面的，都挂了，所以面试时遇到一个好的面试官是非常重要的，基实面试官和面试都都不容易，希望都能相互理解&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2014/03/offer.html" target="_blank"&gt;剑指offer下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2014/02/pbaodian.html" target="_blank"&gt;程序员面试宝典下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;去哪网一面：&lt;/p&gt;
&lt;p&gt;1、自我介绍一下，去哪网笔试时好像比较期待面试者自我介绍的比较长点&lt;/p&gt;
&lt;p&gt;2、写一个单例模式&lt;/p&gt;
&lt;p&gt;3、将卷子上的第一道算法题改成Java实现&lt;/p&gt;
&lt;p&gt;4、面向对象语言的基本特征&lt;/p&gt;
&lt;p&gt;去哪网二面:&lt;/p&gt;
&lt;p&gt;去哪网二面时由于一面给的等级比较低，二面时面的时间比较短，5分钟就让我出来了，哎，就问了下对什么比较感兴趣，你觉的你感兴趣的东西未来的发展走向，就完了&lt;/p&gt;
&lt;p&gt;最后总结一下，去哪网总共有三面，最后一面直接是&lt;code&gt;HR&lt;/code&gt;面，而且比较好拿Offer,我们班好多人都拿到了，我能说的，就是面试比较水，大家也是这么说~~~&lt;/p&gt;
&lt;p&gt;到此为止&lt;/p&gt;</summary><category term="去哪面经"></category></entry><entry><title>阿里巴巴校招2014年软研面经</title><link href="http://www.yanyulin.info/pages/2014/01/ali_1.html" rel="alternate"></link><updated>2014-01-19T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-01-19:pages/2014/01/ali_1.html</id><summary type="html">&lt;p&gt;面试地点:&lt;strong&gt;沈阳&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;面试职位:&lt;strong&gt;软件研发工程师(北京)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;阿里&lt;/strong&gt;一个非常神圣的公司，如果将&lt;code&gt;BAT&lt;/code&gt;按照每年的盈利来说，实际上应该叫做&lt;code&gt;TAB&lt;/code&gt;,腾讯的盈利是最大的，其次就是阿里，再次就是百度，如果按照员工的待遇来排序的话，应该叫做&lt;code&gt;ABT&lt;/code&gt;,三家公司的待遇阿里最高，一般是&lt;code&gt;15K*15&lt;/code&gt;,其次是百度一般&lt;code&gt;13*14.6&lt;/code&gt;，再次就是腾讯....&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;阿里&lt;/strong&gt;总的来说面试还是比较轻松，如果不是算法工程师，就是开发或者研发工程师，一般问的都是一些比较基本的东西&lt;/p&gt;
&lt;p&gt;阿里我走的是实习路线，然后再由实习转入校招，阿里会在每年的四月份进行实习生招聘，此次实习生招聘不压于校招，据说比校招还难，校招时卷子上出的题目就有实习生招聘时卷子上出的题目，所以在此强烈推荐大家都参加阿里的实习生招聘，无论是报着什么目的，并且阿里实习生的待遇还是相当不错的~~&lt;/p&gt;
&lt;p&gt;由于我在沈阳，而阿里的实习生招聘笔试均在北京，所以未参加，所有的面试都是通过电话面试的&lt;/p&gt;
&lt;p&gt;以下仅是回忆，时间比较久远，多少回忆点吧&lt;/p&gt;
&lt;p&gt;电话一面&lt;/p&gt;
&lt;p&gt;1、String,StringBuffer,StringBuilder的区别&lt;/p&gt;
&lt;p&gt;2、GetBuffer的缓存&lt;/p&gt;
&lt;p&gt;3、C语言与C++的区别&lt;/p&gt;
&lt;p&gt;4、说说STL&lt;/p&gt;
&lt;p&gt;5、做过Java相关的项目简介&lt;/p&gt;
&lt;p&gt;6、MFC中点击一个铵钮的整个消息响应流程&lt;/p&gt;
&lt;p&gt;在此这里有些问题，大家可以看一下程序员面试宝典，程序员面试宝典可以应付一下面试、笔试，但是个人不推荐&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2014/02/pbaodian.html" target="_blank"&gt;程序员面试宝典下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;电话二面：&lt;/p&gt;
&lt;p&gt;1、自我介绍&lt;/p&gt;
&lt;p&gt;2、如果让你来设计一种程序设计语言，你会怎么来设计&lt;/p&gt;
&lt;p&gt;3、Java里的泛型有没有类型推导机制&lt;/p&gt;
&lt;p&gt;4、讲讲泛型里面的类型推导机制&lt;/p&gt;
&lt;p&gt;5、做过Java相关的项目没&lt;/p&gt;
&lt;p&gt;电话三面：&lt;/p&gt;
&lt;p&gt;其实到这里就是&lt;code&gt;HR&lt;/code&gt;面了，简单问一下什么时候能过来实习，如果不能过来的话，将在校招时不需要参加笔试，而是直接进入最后一面，仅此而已&lt;/p&gt;
&lt;p&gt;校招最后一面:&lt;/p&gt;
&lt;p&gt;校招最后一面，很悲剧，在阿里实习了两个月了，而自已所在的部门，个人感觉不利于自已的发展，就是网站的日常维护，实在是了无兴趣，因此最后一面，强烈要求换部门，而且还换到北京去，而且还很坚决，估计是自已对那个部门，真的是太失望了吧，面试官说，此次来沈阳招的都是去杭州的，最后给我实习的部门老大打完电话，我就被拒了，可能自已当时也有点犯二吧，阿里虽然把我拒了，但是阿里确实是一个不错的企业~~~&lt;/p&gt;
&lt;p&gt;到此为止&lt;/p&gt;</summary><category term="阿里面经"></category></entry><entry><title>百度校招2014年软研面经</title><link href="http://www.yanyulin.info/pages/2014/01/baidu_1.html" rel="alternate"></link><updated>2014-01-18T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-01-18:pages/2014/01/baidu_1.html</id><summary type="html">&lt;p&gt;面试地点:&lt;strong&gt;沈阳&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;面试职位:&lt;strong&gt;软件研发工程师(北京)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;百度&lt;/strong&gt;面试总结来说，还是非常正规的，而且具有挑战性的，百度面试一般都是有&lt;code&gt;四面&lt;/code&gt;的，前&lt;code&gt;三面&lt;/code&gt;是技术面，后一面是&lt;code&gt;HR&lt;/code&gt;面，&lt;code&gt;百度&lt;/code&gt;与&lt;code&gt;阿里&lt;/code&gt;的面试是我面过这么多公司最正规的，由于面的是软研，面软研的人比较多，因此一二三面都是一般隔一到两天进行，如果你非常想进&lt;code&gt;百度&lt;/code&gt;的话，可以选择报的人数比较少的部门，如&lt;code&gt;运维&lt;/code&gt;，&lt;code&gt;移动开发&lt;/code&gt;等，一般都是三面在一天内进行。&lt;/p&gt;
&lt;p&gt;在此&lt;strong&gt;提醒一下&lt;/strong&gt;,笔试成绩是非常重要的，百度的面试一般是按照笔试成绩来排的，成绩越高，面试时越靠前，当然面的也就越认真，&lt;code&gt;据说，一般录取的就是笔试成绩靠前的人&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;百度一面：百度一面在&lt;code&gt;算法&lt;/code&gt;方面，可以好好看看&lt;code&gt;剑指offer&lt;/code&gt;以及&lt;code&gt;编程之美&lt;/code&gt;这两本书，考我的算法就是来自于这两本书里的&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2014/03/offer.html" target="_blank"&gt;剑指offer下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2013/12/prgbeautiful.html" target="_blank"&gt;编程之美下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;百度一面：&lt;/p&gt;
&lt;p&gt;时问我的问题，大概有以下几个&lt;/p&gt;
&lt;p&gt;1、自我介绍一下&lt;/p&gt;
&lt;p&gt;2、让我画一下对象的内存布局图，即有虚函数，虚析构函数时的对象内存布局图，这个看过&amp;lt;&amp;lt;深入理解C++对象模型&amp;gt;&amp;gt;这本书的人应该不成问题&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2013/11/objectModel.html" target="_blank" &gt;深入理解C++对象模型下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3、线程之间通信的机制？进程之间通信的机制?&lt;/p&gt;
&lt;p&gt;4、Socket中的阻塞与非阻塞模型?以及如何提高效率?&lt;/p&gt;
&lt;p&gt;5、算法：给定一个序列，如何快速的查找出这个序列中第一次出现一次的字符?(&lt;strong&gt;提示&lt;/strong&gt;采用hash,面试官还会让你尽一步缩小时间复杂度，这里可以考虑采用两次&lt;code&gt;hash&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;百度二面：&lt;/p&gt;
&lt;p&gt;时问的比较深(个人感觉答的不是很好)：&lt;/p&gt;
&lt;p&gt;1、看我的简历上写了数据库，上来就搞了个可复杂的关系图，让我设计数据库，我当场头晕了~~&lt;/p&gt;
&lt;p&gt;2、问我网络，数据库，操作系统哪个方面比较熟悉，然后就捉死的问那个你熟悉的方面&lt;/p&gt;
&lt;p&gt;3、各种锁的设计，例如让你设计非阻塞锁，阻塞锁&lt;/p&gt;
&lt;p&gt;4、如给给一个类型进行加锁，如果是这个类型的话，都加锁&lt;/p&gt;
&lt;p&gt;5、STL源码中的一些基本问题，如HashMap的实现(&lt;code&gt;这个是SGI STL对STL的扩展&lt;/code&gt;)等?推荐大家看一下&amp;lt;&lt;STL源码剖析&gt;&amp;gt;这本书，&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2013/11/stlOrigin.html" target="_blank"&gt; STL源码剖析下载地址 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;6、还有一些问题，具体的忘了&lt;/p&gt;
&lt;p&gt;百度三面时：&lt;/p&gt;
&lt;p&gt;1、自我介绍&lt;/p&gt;
&lt;p&gt;2、项目介绍，如果让你设计一个项目时，你的流程?&lt;/p&gt;
&lt;p&gt;3、在项目介绍的过程中，会问你这个项目的设计的过程中，你都考虑了哪些问题?&lt;/p&gt;
&lt;p&gt;4、让你设计一个微博系统&lt;/p&gt;
&lt;p&gt;百度四面时：&lt;/p&gt;
&lt;p&gt;第四面，就不用说了，是&lt;code&gt;HR&lt;/code&gt;面，你有啥说啥，有啥问啥，没什么好拘谨的~~&lt;/p&gt;
&lt;p&gt;到此为止&lt;/p&gt;</summary><category term="百度面经"></category></entry><entry><title>人人网校招2014年研发面经</title><link href="http://www.yanyulin.info/pages/2013/12/renren_1.html" rel="alternate"></link><updated>2013-12-24T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2013-12-24:pages/2013/12/renren_1.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;面试地点:&lt;strong&gt;沈阳&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;面试职位:&lt;strong&gt;软件研发工程师(北京)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;人人网&lt;/strong&gt;总体来说面试还是比较轻松的，2013.9.23在东北大学参加了人人网的笔试(说起来那一天还是比较忙碌的，参加完网易的面试，紧接着又参加了商泰这个小公司的面试，这一天总共进行了五面，所有的面完后就已经是下午五点了，又急着乘车去了东大，6点的时候参加了人人的笔试)，人人的笔试允许霸笔(不过霸笔是有条件的，据说是因为试卷份数有限，研究生且是985的才有资格参加霸笔，所以最好还是网申一下)，人人的笔试我是霸笔的&lt;/p&gt;
&lt;p&gt;考完试后，每二天下午收到面试通知(据说面试是按分数排的，所以笔试分数高是很重要的，百度也是)&lt;/p&gt;
&lt;p&gt;一面：记得面人人的那天，我刚参加完百度的三面，因此人人网通知我下午四点面试，而我面完百度估计要到四点半了，因此推迟到了下午五点，五点时来到了XXX洒店，好多人呀，6点多的时候我才进行了一面，一面是技术面，面试我的是一位GG,因为面试的时候串题比较严重，因此面我的GG,就当场想了一个题目，让我做，就是怎么判断两个矩形是否相交，我看了看，真的很简单，我就给他定义了一个结构体表示矩形的顶点，然后通过矩形的中心点来判断两个矩形是否相交，随后看了看我的简历，就写了一个&lt;code&gt;type_trait&lt;/code&gt;，让我说说他的用法，我就给他答了个&lt;code&gt;POD&lt;/code&gt;,然后他就不让我说了，最后跟我谈了谈我在淘宝实习时用的淘宝的&lt;code&gt;WEBX&lt;/code&gt;架构，面完后面试官对我的印象非常好，以为这是我的最后一面，让我直接去找HR,我给他说我才面了一面，他笑了笑，然后就给了我一个等级，反正比较高，正因为这个等级，我直接进入了三面，没有二面，一面时问过其他同学的问题大概有&lt;/p&gt;
&lt;p&gt;1：求一个序列的最大子序列&lt;/p&gt;
&lt;p&gt;2：笔试卷子上的算法题(&lt;strong&gt;笔试卷子&lt;/strong&gt;还是得好好看)&lt;/p&gt;
&lt;p&gt;3:快速排序，归并排序的写&lt;/p&gt;
&lt;p&gt;4：记不清了还有一些&lt;/p&gt;
&lt;p&gt;三面：三面是一个头头面的，三面问了我HashMap是怎么实现的，CurrentHashMap是怎么实现的，以及一致性Hash算法，淘宝的TDDL,消息中间件...,以及让我写了一个算法，一个棋盘，只能向左走或者下走，每次只能走一步，从最左角走到最右角，总共有多少种走法，其实也很简单，是个递归算法，我当时给他用数学公式算出来了结果，并告诉他，然后他让我写程序实现他，最后我也给他实现了，最后等级当然也挺高的&lt;/p&gt;
&lt;p&gt;HR面，面完后，第二天让我去签约，要求我带三方，对面试结果前三名好像要求带三方，其他的则没要求，三方我们还没发，当然就没给，最后给了我一个意向OFFER,让我三方发了后寄过去&lt;/p&gt;
&lt;p&gt;最后：总结一下人人的面试还是比较轻松的，而且面试的GG都比较好&lt;/p&gt;</summary><category term="人人面经"></category></entry><entry><title>网易校招2014年电商面经</title><link href="http://www.yanyulin.info/pages/2013/12/neteasyM_1.html" rel="alternate"></link><updated>2013-12-11T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2013-12-11:pages/2013/12/neteasyM_1.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;面试地点:&lt;strong&gt;沈阳&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;面试职位:&lt;strong&gt;软件研发工程师(北京)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网易&lt;/strong&gt;一直以来都是一个我很向往的公司，无奈，我却没有去成，当然不是被拒，而是我把它拒了，我很向往它，但是却很无奈。人生往往就是这样，有时候最想去的公司，却不一定能去成.&lt;/p&gt;
&lt;p&gt;笔试时间，&lt;code&gt;2013/9/23&lt;/code&gt;,卷子，电子商务Java卷，网易的笔试，我能说的就是一种严肃感，一种正气，不允许霸笔，不输于中考，考试时中间要隔一排，这也是我找工作以来参加的所有笔试中唯一一个公司要求这么做的，这是一个公司的威严，是一种公平，我一直很向住网易，特别是网易的游戏，网易的游戏很难进，被刷是很正常的，我也不例外，简历被网易游戏刷了，参加了网易互联&lt;/p&gt;
&lt;p&gt;笔试卷子：难度一般，选择题给我印象最深的两题就是有限自动机，以及一道判断NP问题，基础部分是必做的，后面有ABC三部份，可以选做，我那天精力比较保满，把ABC三部份都做了&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yanyulin.info/pages/2013/12/neteasyM_1.html" title="烟雨林"&gt;面试&lt;/a&gt;，网易HR当天夜晚01：00打电话告诉我通知我明天去XXX大洒店面试，没怎么听清楚，让他发短信告诉我地点，一觉睡到天亮，7点多时候，看了看Nokia手机，短信竟然没显示全，这里不得不说一句,&lt;strong&gt;一个好的手机也是非常重要的&lt;/strong&gt;，至于为什么重要，下次再告诉你，没收到信息，我就打电话，没人接，最后发了信息让他重发一遍，换了一部手机，大概8点半时收到了他重发的短信，这里我不得不说的一句是，网易的HR真的很负责，很热心&lt;/p&gt;
&lt;p&gt;一面：&lt;/p&gt;
&lt;p&gt;我大概提前了半个小时来到了酒店，给HR打了电话，最后被领到了一个地方等，在和那个负责接待我们的人的交谈中，了解到网易电商在沈阳总共有11个人参加了面试，其他人你可以YY了，从这里也可以看出网易通过笔试刷掉了大大批的人，大概这也是为什么笔试如此正规吧&lt;/p&gt;
&lt;p&gt;11点时参加了一面，一面是部门负责人面的，面试时问的都是技术性的问题，因为是电商，所以肯定是问&lt;strong&gt;Java&lt;/strong&gt;,我对&lt;strong&gt;Java&lt;/strong&gt;以前搞过两年，研究生期间不搞这个，但这两年的功底还在，问题大概就是如下&lt;/p&gt;
&lt;p&gt;1、实现set接口的有哪些类?&lt;/p&gt;
&lt;p&gt;2、你是如何理解Java里面的垃圾收集机制(最好分析到对象在堆中的分配上)&lt;/p&gt;
&lt;p&gt;3、你对Spring的理解，Spring里面的代理是怎么实现的，如果让你设计，你怎么设计&lt;/p&gt;
&lt;p&gt;4、让我画了下淘宝的webx架构&lt;/p&gt;
&lt;p&gt;5、HashMap的实现机制&lt;/p&gt;
&lt;p&gt;6、一致性Hash算法&lt;/p&gt;
&lt;p&gt;等等&lt;/p&gt;
&lt;p&gt;二面：&lt;/p&gt;
&lt;p&gt;网易的面试过程好像很简单，二面就是HR面了，HR面你懂的，纯粹扯谈，不过HR很好，基本上问的就是未来你的职业规划，你对工资的要求，你对加班的要求，你对户口的要求，等等，面完后感觉还行，HR好像对我很满意，最后我问了下结果什么时候出来，他说要等北京那边的考完后，也就是&lt;strong&gt;10.8&lt;/strong&gt;北京考后，两边笔试面试结果汇总择优录取&lt;/p&gt;
&lt;p&gt;等待：&lt;/p&gt;
&lt;p&gt;等待就像栀子花开，漫长却很期待，9.23后,我一直在等待着网易，等了一个多月，他都没给我回音，10.25号我将三方寄到了百度，10.28号一觉睡醒，收到了网易的offer,当然待遇比百度要高那么几万，那时我在北京，网易HR让我去找他面谈一下，他告诉我，我是第一批被录取的，让我再考虑一下，一个星期给答复，我也不想拒百度，结果就这样悲剧吧，事后还给我打了个电话，让我再考虑下~~&lt;/p&gt;</summary><category term="网易面经"></category></entry><entry><title>中国人民银行2013校招技术类面经</title><link href="http://www.yanyulin.info/pages/2013/01/renmingyinhang_1.html" rel="alternate"></link><updated>2013-01-19T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2013-01-19:pages/2013/01/renmingyinhang_1.html</id><summary type="html">&lt;p&gt;面试地点:&lt;strong&gt;北京&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;面试职位:&lt;strong&gt;技术类岗位&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中国人民银行&lt;/strong&gt;在2013年校招中只有一面，结果会在2月旬的时候进行通知，随后会进行体检，再然后是政治材料的政审，中国人民银行据说只要进入了，就相当于公务员的待遇，不知道真假~~~&lt;/p&gt;
&lt;p&gt;只有一面&lt;/p&gt;
&lt;p&gt;下午面计算机的&lt;code&gt;28&lt;/code&gt;个人，好多清北、复旦、同济、中科院的，各种名校呀，我在其中排第&lt;code&gt;9&lt;/code&gt;,鸭梨很大，⊙﹏⊙b汗&lt;/p&gt;
&lt;p&gt;&lt;code&gt;3&lt;/code&gt;分钟自我介绍，包括教育经历、学习、家庭等&lt;/p&gt;
&lt;p&gt;这个问题，就说了&lt;code&gt;1&lt;/code&gt;分钟，说得乱七八糟，光说技术去了，觉得人家也不见得想听这，忘了说在校学习的奖学金荣誉、证书、个性,总结一句话，也是教训，面试国企一类的，没必要去讲技术，就需要讲一下你获得了哪些奖励，哪些证书 ，以及自已的爱好等，就OK啦，没必要去讲技术了&lt;/p&gt;
&lt;p&gt;介绍给自己印象最深的一本书&lt;/p&gt;
&lt;p&gt;介绍下网络工程师的证书&lt;/p&gt;
&lt;p&gt;为什么选择这样的行业而没有选择互联网等相关的企业，说白了就是问你为什么选择中国人民银行&lt;/p&gt;
&lt;p&gt;小结：语言表达能力有待加强，感觉说的语无伦次、逻辑混乱&lt;/p&gt;
&lt;p&gt;而且就面了&lt;code&gt;5&lt;/code&gt;分钟，貌似正常应该&lt;code&gt;10&lt;/code&gt;分钟&lt;/p&gt;
&lt;p&gt;到此为止&lt;/p&gt;</summary><category term="银行面经"></category></entry><entry><title>阿里巴巴校招2010年软研面经</title><link href="http://www.yanyulin.info/pages/2010/11/ali_2.html" rel="alternate"></link><updated>2010-11-19T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2010-11-19:pages/2010/11/ali_2.html</id><summary type="html">&lt;p&gt;刚刚参加了阿里巴巴的面试，现将题目公布于此，希望对找工作的人有帮助。&lt;/p&gt;
&lt;p&gt;1、String,StringBuffer, StringBuilder 的区别是什么？String为什么是不可变的？&lt;/p&gt;
&lt;p&gt;这道题源码分析，可以参考这篇博文
&lt;a href="http://www.yanyulin.info/pages/2013/07/string.html" target="_blank"&gt;
String StringBuffer StringBuilder的区别分析
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;String对象的值是不可变的，而StringBuffer和StringBuilder的值可以变化，适用于动态拼接长字符串，如SQL语句。StringBuffer是同步的，StringBuilder是非同步的。String类中用于保存字符串值的是char数组，该数组被声明为final，因而是不可变的。&lt;/p&gt;
&lt;p&gt;2、&lt;code&gt;VECTOR&lt;/code&gt;,&lt;code&gt;ARRAYLIST&lt;/code&gt;, &lt;code&gt;LINKEDLIST&lt;/code&gt;的区别是什么？&lt;/p&gt;
&lt;p&gt;这道题源码分析，可以参考这篇博文
&lt;a href="http://blog.csdn.net/zwjlpeng/article/details/9701249" target="_blank"&gt;
String StringBuffer StringBuilder的区别分析
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Vector&lt;/code&gt;是java1版本遗留下来的，本身为同步的，Arraylist类似于数组，各个元素的物理存储位置相邻，适用于随机存取，但插入删除会造成元素移动；而LinkedList是通常所说的链表，逻辑位置相邻的元素物理上不一定是相邻存储，适用于插入删除较多的情况，而查找效率较低。&lt;/p&gt;
&lt;p&gt;3、&lt;code&gt;Hashtable&lt;/code&gt;, &lt;code&gt;HashMap&lt;/code&gt;，&lt;code&gt;TreeMap&lt;/code&gt;区别&lt;/p&gt;
&lt;p&gt;这道题源码分析，可以参考这篇博文
&lt;a href="http://blog.csdn.net/zwjlpeng/article/details/9746425" target="_blank"&gt;
String StringBuffer StringBuilder的区别分析
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Hashtable&lt;/code&gt;和&lt;code&gt;HashMap&lt;/code&gt;都实现了Map接口，都是通过hash函数将一个值映射到一个存储位置从而实现键值对的高效查询。Hashtable为java1版本遗留下来的，是同步的，键和值都不能为null，判断是否包含键值，通过contains(key,value)来实现；HashMap是非同步的，因此在单线程环境下，其效率比Hashtable要高，可以存入一个&lt;code&gt;null&lt;/code&gt;键，多个null值，将判断是否包含键值区分为containsKey(key)和containsValue(value)两种方式。TreeMap主要是实现了键的排序功能，即各个键是按序排列的。&lt;/p&gt;
&lt;p&gt;4、&lt;code&gt;ConcurrentMap&lt;/code&gt;和&lt;code&gt;HashMap&lt;/code&gt;的区别&lt;/p&gt;
&lt;p&gt;ConcurrentMap是专用于多线程环境的，是同步的。而HashMap针对单线程环境，方法都不是同步的，要在多线程中实现同步必须通过外加同步。&lt;/p&gt;
&lt;p&gt;5、&lt;code&gt;Tomcat&lt;/code&gt;，&lt;code&gt;apache&lt;/code&gt;，&lt;code&gt;jboss&lt;/code&gt;的区别&lt;/p&gt;
&lt;p&gt;Tomcat，JBoss&lt;/p&gt;
&lt;p&gt;6、&lt;code&gt;GET/POST&lt;/code&gt;区别&lt;/p&gt;
&lt;p&gt;Get和Post是指Servlet中处理HttpServletRequest时的不同方式，其设定方式是在表单中的action method指定（get或post），则请求提交到对应servlet时，会调用相应的doPost()或doGet()方法。
二者的主要区别：get是通过url流来传递数据的，因此要传送的数据直接通过url后加参数值对来实现，缺点是安全性不高，密码等不能通过该方式来传递，而且传输的数据量有严格的限制；post是通过新建的流来实现数据的传输的，因此url不会显示需要传输的数据，安全性相对来说要高，而且传输的数据量没有限制。&lt;/p&gt;
&lt;p&gt;7、&lt;code&gt;SESSION&lt;/code&gt;, &lt;code&gt;COOKIE&lt;/code&gt;区别&lt;/p&gt;
&lt;p&gt;二者都是用来记录用户信息的方式。Session是指一次Http会话，其生命周期也仅此一次会话，因此只能保存一次会话的信息，会话结束后session对象就会销毁。而Cookie是指浏览器为了记忆用户的某些常用信息而保存在客户端的数据，数据不会随会话的结束而丢失。&lt;/p&gt;
&lt;p&gt;8、&lt;code&gt;Servlet&lt;/code&gt;的生命周期&lt;/p&gt;
&lt;p&gt;Web容器启动后，当用户请求某个servlet时，先查看容器中是否已经有该servlet的实例，如果存在，则直接将请求发送给改serlvet处理，否则新建一个servlet实例，调用其init方法进行初始化操作，然后调用其service方法处理请求，处理的方式有doGet和doPost等，请求处理完成后形成http响应发送给客户端，当Web容器退出后，会调用servlet的destroy方法将serlvet实例销毁。&lt;/p&gt;
&lt;p&gt;9、&lt;code&gt;HTTP&lt;/code&gt;报文包含内容&lt;/p&gt;
&lt;p&gt;Http报文包括HttpRequest报文和HttpResponse报文。
HttpRequest报文包括：Http版本信息，字符编码，请求的URI，请求方式（get或post），请求标头信息，请求主体。HttpResponse报文头包括：Http版本，响应的状态码，响应状态码对应的摘要文字，响应标头信息，以及响应主体&lt;/p&gt;
&lt;p&gt;10、&lt;code&gt;Statement&lt;/code&gt;与&lt;code&gt;PreparedStatement&lt;/code&gt;的区别,什么是SQL注入，如何防止SQL注入？&lt;/p&gt;
&lt;p&gt;Statement和PreparedStatement都是用于执行SQL语句的对象。Statement的sql语句无法进行动态的修改，必须在运行时才对sql语句进行解析。PreparedStatement正如其名，在编译期就对sql语句进行了解析放入内存中，适用于很多sql语句模式一样，只是数据不同的情况，不需要对每一个都进行sql解析，提高了效率。PreparedStatement还可以实现批量sql的执行。SQL注入是指在动态拼接sql语句的过程中，插入恶意的数据，导致原本的sql语句含义甚至结构发生了变化。防止sql注入的方式：对用户输入控件的输入文本进行合法性校验，如果发现疑似注入的内容，予以屏蔽。&lt;/p&gt;
&lt;p&gt;11、redirect, foward区别&lt;/p&gt;
&lt;p&gt;redirect是重定位，这是通过浏览器重新请求某个新的URL，然后接收响应数据并展示给用户，因此浏览器知道整个重定位的过程。而forward直接通过servlet向服务器请求某个URL，得到响应后，将数据再发给浏览器，因此浏览器根本不知道这个响应信息是否是经过转发的。&lt;/p&gt;
&lt;p&gt;12、关于JAVA内存模型，一个类（两个属性，四个方法）实例化100次，现在内存中的存储状态，
几个对象，几个属性，几个方法。&lt;/p&gt;
&lt;p&gt;Java的内存分为栈和堆，栈是程序运行的单位，主要保存基本数据类型的数据和程序运行时的信息，而堆主要保存对象的信息。
而Java的堆是按分代方式来组织的，分为年轻代（新生代、幸存1区，幸存2区），年老代以及持久代。其中新建的对象一般都在新生代，随着系统的运行，GC会将新生代的对象移至幸存区，年老代。而持久代主要保存类信息和方法信息。因此，一个包含两个属性四个方法的类实例化100次后再内存中的存储状态：四个方法仅在持久代内存区域存储1份，而对象在新生代会产生100个，且每个对象都有自己的属性，故内存中有200个属性值。&lt;/p&gt;
&lt;p&gt;13、谈谈Hibernate的理解，一级和二级缓存的作用，在项目中Hibernate都是怎么使用缓存的。&lt;/p&gt;
&lt;p&gt;Hibernate是ORM框架的一种实现，为了使用户从繁重的SQL语句中解放出来而设计的，将对象与关系数据库中的实体通过配置文件建立映射关系，从而实现数据的存取对象化。&lt;/p&gt;
&lt;p&gt;14、反射讲一讲，主要是概念,都在哪需要反射机制，反射的性能，如何优化&lt;/p&gt;
&lt;p&gt;反射是通过类名来加载类的信息，并创建对象。一般都是通过反射来实现Java的多态性，可扩展性。Java中主张面向接口编程，当用户需要新的特性时，只要实现指定的接口，并通过修改配置文件即可将新性能挂接到原有系统中，而不需要对原有系统进行修改。&lt;/p&gt;
&lt;p&gt;15、谈谈Hibernate与Ibatis的区别，哪个性能会更高一些&lt;/p&gt;
&lt;p&gt;16、对Spring的理解，项目中都用什么？怎么用的？对&lt;code&gt;IOC&lt;/code&gt;、和AOP的理解及实现原理&lt;/p&gt;
&lt;p&gt;17、线程同步，并发操作怎么控制&lt;/p&gt;
&lt;p&gt;多线程环境下，不同线程如果不共享数据时，可以异步执行，提高系统的性能与效率，但是当需要共享数据时，需要做同步控制，以保持数据的一致性。线程同步是指多个线程共享数据，其中一个线程需要使用另一个线程的结果，必须等另一个线程执行完成后才能继续执行。在java中线程同步主要通过synchronized关键字，wait()，notify(),notifyAll()机制，Lock等来实现线程同步。同步操作通过锁机制保证同一时间只有一个线程访问该对象，但是也存在一定的问题：导致性能下降，容易出现死锁。&lt;/p&gt;
&lt;p&gt;18、描述struts的工作流程。&lt;/p&gt;
&lt;p&gt;浏览器客户端提出request请求，Web容器接收到request后，交给&lt;code&gt;ActionServlet&lt;/code&gt;，根据struts-config.xml配置文件中配置的表单，生成ActionForm，将请求转发给Action，Action调用ActionForm以及JavaBean执行逻辑处理，形成ActionForward返回给ActionServlet，ActionServlet根据配置将请求转发给相应的JSP页面，JSP页面调用JavaBean后形成Http响应回送给客户端。&lt;/p&gt;
&lt;p&gt;19、&lt;code&gt;Tomcat&lt;/code&gt;的session处理，如果让你实现一个tomcatserver，如何实现session机制&lt;/p&gt;
&lt;p&gt;20、关于Cache(Ehcache,Memcached)&lt;/p&gt;
&lt;p&gt;21、sql的优化相关问题&lt;/p&gt;
&lt;p&gt;22、oracle中 rownum与rowid的理解，一千条记录我查200到300的记录怎么查？&lt;/p&gt;
&lt;p&gt;假设表为TABLE_NAME，则查询表中第200到第300条记录的SQL语句如下：&lt;/p&gt;
&lt;p&gt;&lt;textarea style="width:100%;height:100px"&gt;
SELECT * FROM (
　　SELECT rownum num, x.* FROM(
　　　　SELECT * TABLE_NAME ORDER BY PRI_KEY
　　)x
)y
WHERE y.num BETWEEN 200 AND 300；
&lt;/textarea&gt;&lt;/p&gt;
&lt;p&gt;23、如何分析ORACLE的执行计划？&lt;/p&gt;
&lt;p&gt;24、 DB中索引原理，种类，使用索引的好处和问题是什么？&lt;/p&gt;
&lt;p&gt;DB中为了能快速检索数据，对记录添加索引，一般采用B+树索引。索引分为聚簇索引和非聚簇索引。当在表的某个字段建立聚簇索引后，记录相当于索引数的叶子节点，故记录的物理顺序会按指定字段的值进行调整，因此一个表只能建立一个聚簇索引，这种索引不适用于大量插入删除数据的情况，因为会导致记录的频繁移动，降低性能。而在表上建立非聚簇索引后，记录位于索引树外，故表的记录不会发生物理上的顺序调整，一个表上可以在多个字段上建立非聚簇索引，这种索引适应于对表进行频繁增删的情况。&lt;/p&gt;
&lt;p&gt;25、&lt;code&gt;JVM&lt;/code&gt;垃圾回收实现原理。垃圾回收的线程优先级。&lt;/p&gt;
&lt;p&gt;26、&lt;code&gt;jvm&lt;/code&gt;最大内存设置。设置的原理。结合垃圾回收讲讲。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-Xms:1024m&lt;/code&gt; 设置初始化堆大小
&lt;code&gt;–Xmx:1024m&lt;/code&gt;设置最大堆大小
具体大小应根据内存总大小值来确定，一般这两个值应相等，否则当内存不够时，造成GC重新分配内存。
&lt;code&gt;-XX:PermSize=1024m&lt;/code&gt; 设置永久内存区大小
&lt;code&gt;-XX:MaxParmSize=1024m&lt;/code&gt; 设置最大永久内存区大小。&lt;/p&gt;
&lt;p&gt;到此为止&lt;/p&gt;</summary><category term="阿里面经"></category></entry></feed>