<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>烟雨林</title><link href="http://www.yanyulin.info/" rel="alternate"></link><link href="http://www.yanyulin.info/feeds/jing-pin-shu-ji.atom.xml" rel="self"></link><id>http://www.yanyulin.info/</id><updated>2013-11-18T00:00:00+08:00</updated><entry><title>深度探索C++对象模型</title><link href="http://www.yanyulin.info/pages/2013/11/objectModel.html" rel="alternate"></link><updated>2013-11-18T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2013-11-18:pages/2013/11/objectModel.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;电子书PDF格式下载:&lt;a href="http://yunpan.cn/QUK3HwIaW6tu2" target="_blank" title="《深度探索C++对象模型》"&gt;点这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第0章 导读（译者的话）&lt;/p&gt;
&lt;p&gt;第1章 关于对象（Object Lessons）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.1 C++对象模型（The C++ Object Model）&lt;/p&gt;
&lt;p&gt;1.2 关键词所带来的差异（A Keyword Distinction）&lt;/p&gt;
&lt;p&gt;1.3 对象的差异（An Object Distinction）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第2章 构造函数语意学（The Semantics of constructors）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.1 Default Constructor的建构操作&lt;/p&gt;
&lt;p&gt;2.2 Copy Constructor的建构操作&lt;/p&gt;
&lt;p&gt;2.3 程序转换语意学（Program Transformation Semantics）&lt;/p&gt;
&lt;p&gt;2.4 成员们的初始化队伍（Member Initialization List）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第3章 Data语意学（The Semantics of Data）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.1 Data Member的绑定（The Binding of a Data Member）&lt;/p&gt;
&lt;p&gt;3.2 Data Member的布局（Data Member Layout）&lt;/p&gt;
&lt;p&gt;3.3 Data Member的存取&lt;/p&gt;
&lt;p&gt;3.4 “继承”与Data Member&lt;/p&gt;
&lt;p&gt;3.5 对象成员的效率（Object Member Efficiency）&lt;/p&gt;
&lt;p&gt;3.6 指向Data Members的指针（Pointer to Data Members）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第4章 Function语意学（The Semantics of Function）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4.1 Member的各种调用方式&lt;/p&gt;
&lt;p&gt;4.2 Virtual Member Functions（虚拟成员函数）&lt;/p&gt;
&lt;p&gt;4.3 函数的效能&lt;/p&gt;
&lt;p&gt;4.4 指向Member Functions的指针（Pointer-to-Member Functions）&lt;/p&gt;
&lt;p&gt;4.5 Inline Functions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第5章 构造、解构、拷贝 语意学（Semantics of Construction，Destruction，and Copy）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;5.1 无继承情况下的对象构造&lt;/p&gt;
&lt;p&gt;5.2 继承体系下的对象构造&lt;/p&gt;
&lt;p&gt;5.3 对象复制语意学（Object Copy Semantics）&lt;/p&gt;
&lt;p&gt;5.4 对象的功能（Object Efficiency）&lt;/p&gt;
&lt;p&gt;5.5 解构语意学（Semantics of Destruction）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第6章 执行期语意学（Runting Semantics）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6.1 对象的构造和解构（Object Construction and Destruction）&lt;/p&gt;
&lt;p&gt;6.2 new和delete运算符&lt;/p&gt;
&lt;p&gt;6.3 临时性对象（Temporary Objects）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第7章 站在对象模型的类端（On the Cusp of the Object Model）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7.1 Template&lt;/p&gt;
&lt;p&gt;7.2 异常处理（Exception Handling）&lt;/p&gt;
&lt;p&gt;7.3 执行期类型识别（Runtime Type Identification，RTTI）&lt;/p&gt;
&lt;p&gt;7.4 效率有了，弹性呢？&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="C++书库"></category></entry></feed>