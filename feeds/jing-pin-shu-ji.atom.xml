<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>烟雨林</title><link href="http://www.yanyulin.info/" rel="alternate"></link><link href="http://www.yanyulin.info/feeds/jing-pin-shu-ji.atom.xml" rel="self"></link><id>http://www.yanyulin.info/</id><updated>2014-03-28T00:00:00+08:00</updated><entry><title>C++ Primer中文版PDF下载</title><link href="http://www.yanyulin.info/pages/2014/03/cplusprimer.html" rel="alternate"></link><updated>2014-03-28T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-28:pages/2014/03/cplusprimer.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;C++ Primer 中文版电子书PDF格式下载:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pan.baidu.com/s/1o6whxqU" target="_blank" title="《深度探索C++对象模型》"&gt;点这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载密码：&lt;code&gt;9sec&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;书评&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C++ Primer&lt;/code&gt;是一本非常精典的书，是每一个C++学习者以及爱好者都看的书，书籍的编写是C++的作者之一，因此书的权威性也就可见一斑了，该书比较适合于初学者，书中首先介绍了C++方面的一些基本知识，由浅入深，其最大的优点就是内容全面，遵循标准，讲解细致，也存在缺点，语言啰嗦，我在阅读时经常感叹，为什么很简单的一个概念要说得这么哆嗦呢，有时还要重复几遍。整本书阅读起来还是比较累的，建议初学者将其作为教材，认认真真的系统学一下...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第1章　快速入门&lt;/p&gt;
&lt;p&gt;1.1 编写简单的C++程序&lt;/p&gt;
&lt;p&gt;1.2 初窥输入/输出&lt;/p&gt;
&lt;p&gt;1.3 关于注释&lt;/p&gt;
&lt;p&gt;1.4 控制结构 入&lt;/p&gt;
&lt;p&gt;1.5 类的简介&lt;/p&gt;
&lt;p&gt;1.6 C++程序&lt;/p&gt;
&lt;p&gt;小结&lt;/p&gt;
&lt;p&gt;术语&lt;/p&gt;
&lt;p&gt;第一部分 基本语言&lt;/p&gt;
&lt;p&gt;第2章　变量和基本类型&lt;/p&gt;
&lt;p&gt;2.1 基本内置类型&lt;/p&gt;
&lt;p&gt;2.2 字面值常量&lt;/p&gt;
&lt;p&gt;2.3 变量&lt;/p&gt;
&lt;p&gt;2.4 const限定符&lt;/p&gt;
&lt;p&gt;2.5 引用&lt;/p&gt;
&lt;p&gt;2.6 typedef名字&lt;/p&gt;
&lt;p&gt;2.7 枚举&lt;/p&gt;
&lt;p&gt;2.8 类类型&lt;/p&gt;
&lt;p&gt;2.9 编写自己的头文件&lt;/p&gt;
&lt;p&gt;小结&lt;/p&gt;
&lt;p&gt;术语&lt;/p&gt;
&lt;p&gt;第3章　标准库类型&lt;/p&gt;
&lt;p&gt;3.1 命名空间的using声明&lt;/p&gt;
&lt;p&gt;3.2 标准库string类型&lt;/p&gt;
&lt;p&gt;3.3 标准库vector类型&lt;/p&gt;
&lt;p&gt;3.4 迭代器简介&lt;/p&gt;
&lt;p&gt;3.5 标准库bitset类型&lt;/p&gt;
&lt;p&gt;小结&lt;/p&gt;
&lt;p&gt;术语&lt;/p&gt;
&lt;p&gt;第4章　数组和指针&lt;/p&gt;
&lt;p&gt;4.1 数组&lt;/p&gt;
&lt;p&gt;4.2 指针的引入&lt;/p&gt;
&lt;p&gt;4.3 C风格字符串&lt;/p&gt;
&lt;p&gt;4.4 多维数组&lt;/p&gt;
&lt;p&gt;小结&lt;/p&gt;
&lt;p&gt;术语&lt;/p&gt;
&lt;p&gt;第5章　表达式&lt;/p&gt;
&lt;p&gt;5.1 算术操作符&lt;/p&gt;
&lt;p&gt;5.2 关系操作符和逻辑操作符&lt;/p&gt;
&lt;p&gt;5.3 位操作符&lt;/p&gt;
&lt;p&gt;5.4 赋值操作符&lt;/p&gt;
&lt;p&gt;5.5 自增和自减操作符&lt;/p&gt;
&lt;p&gt;5.6 箭头操作符&lt;/p&gt;
&lt;p&gt;5.7 条件操作符&lt;/p&gt;
&lt;p&gt;5.8 sizeof操作符&lt;/p&gt;
&lt;p&gt;5.9 逗号操作符&lt;/p&gt;
&lt;p&gt;5.10 复合表达式的求值&lt;/p&gt;
&lt;p&gt;5.11 new和delete表达式&lt;/p&gt;
&lt;p&gt;5.12 类型转换&lt;/p&gt;
&lt;p&gt;小结&lt;/p&gt;
&lt;p&gt;术语&lt;/p&gt;
&lt;p&gt;第6章　语句&lt;/p&gt;
&lt;p&gt;6.1 简单语句&lt;/p&gt;
&lt;p&gt;6.2 声明语句&lt;/p&gt;
&lt;p&gt;6.3 复合语句（块）&lt;/p&gt;
&lt;p&gt;6.4 语句作用域&lt;/p&gt;
&lt;p&gt;6.5 if语句&lt;/p&gt;
&lt;p&gt;6.6 switch语句&lt;/p&gt;
&lt;p&gt;6.7 while语句&lt;/p&gt;
&lt;p&gt;6.8 for循环语句&lt;/p&gt;
&lt;p&gt;6.9 do while语句&lt;/p&gt;
&lt;p&gt;6.10 break语句&lt;/p&gt;
&lt;p&gt;6.11 continue语句&lt;/p&gt;
&lt;p&gt;6.12 goto语句&lt;/p&gt;
&lt;p&gt;6.13 try块和异常处理&lt;/p&gt;
&lt;p&gt;6.14 使用预处理器进行调试&lt;/p&gt;
&lt;p&gt;小结&lt;/p&gt;
&lt;p&gt;术语&lt;/p&gt;
&lt;p&gt;第7章　函数&lt;/p&gt;
&lt;p&gt;7.1 函数的定义&lt;/p&gt;
&lt;p&gt;7.2 参数传递&lt;/p&gt;
&lt;p&gt;7.3 return语句&lt;/p&gt;
&lt;p&gt;7.4 函数声明&lt;/p&gt;
&lt;p&gt;7.5 局部对象&lt;/p&gt;
&lt;p&gt;7.6 内联函数&lt;/p&gt;
&lt;p&gt;7.7 类的成员函数&lt;/p&gt;
&lt;p&gt;7.8 重载函数&lt;/p&gt;
&lt;p&gt;7.9 指向函数的指针&lt;/p&gt;
&lt;p&gt;小结&lt;/p&gt;
&lt;p&gt;术语&lt;/p&gt;
&lt;p&gt;第8章　标准IO库&lt;/p&gt;
&lt;p&gt;8.1 面向对象的标准库&lt;/p&gt;
&lt;p&gt;8.2 条件状态&lt;/p&gt;
&lt;p&gt;8.3 输出缓冲区的管理&lt;/p&gt;
&lt;p&gt;8.4 文件的输入和输出&lt;/p&gt;
&lt;p&gt;8.5 字符串流&lt;/p&gt;
&lt;p&gt;小结&lt;/p&gt;
&lt;p&gt;术语&lt;/p&gt;
&lt;p&gt;第二部分 容器和算法&lt;/p&gt;
&lt;p&gt;第9章　顺序容器&lt;/p&gt;
&lt;p&gt;第10章　关联容器&lt;/p&gt;
&lt;p&gt;第11章　泛型算法&lt;/p&gt;
&lt;p&gt;第三部分 类和数据抽象&lt;/p&gt;
&lt;p&gt;第12章　类&lt;/p&gt;
&lt;p&gt;第13章　复制控制&lt;/p&gt;
&lt;p&gt;第14章　重载操作符与转换&lt;/p&gt;
&lt;p&gt;第四部分 面向对象编程与泛型编程&lt;/p&gt;
&lt;p&gt;第15章　面向对象编程&lt;/p&gt;
&lt;p&gt;第16章　模板与泛型编程&lt;/p&gt;
&lt;p&gt;第五部分 高级主题&lt;/p&gt;
&lt;p&gt;第17章　用于大型程序的工具&lt;/p&gt;
&lt;p&gt;第18章　特殊工具与技术&lt;/p&gt;
&lt;p&gt;附录　标准库&lt;/p&gt;
&lt;p&gt;索引&lt;/p&gt;</summary><category term="C++书库"></category></entry><entry><title>Java编程思想PDF版下载</title><link href="http://www.yanyulin.info/pages/2014/03/think_in_java.html" rel="alternate"></link><updated>2014-03-23T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-23:pages/2014/03/think_in_java.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;a href="http://pan.baidu.com/s/1jG2vdt0" target="_blank"&gt;
Java编程思想PDF版下载
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载密码: &lt;code&gt;4fui&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Java编程思想每个学Java的人，基本上都听说过了，一本很出名的书，也是很多学Java人的必备书，个人对本书的评价一般，也许本书的英文版的确很好，而我看的一直是翻译的版本，我只能说这本书翻译的真是比较糟糕，一些很通俗易懂的地方，在书中被翻译的晦涩难道，有时压根就不知道翻译者想表达的是什么意思，从书的章节来看，这本书的内容比较全，由浅入深，但作为Java历史上一本比较精典的书，我还是推荐大家看一下吧，毕竟再怎么滴，它也是一本精典的书...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;书目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第1章 对象导论&lt;/p&gt;
&lt;p&gt;1.1 抽象过程&lt;/p&gt;
&lt;p&gt;1.2 每个对象都有一个接口&lt;/p&gt;
&lt;p&gt;1.3 每个对象都提供服务&lt;/p&gt;
&lt;p&gt;1.4 被隐藏的具体实现&lt;/p&gt;
&lt;p&gt;1.5 复用具体实现&lt;/p&gt;
&lt;p&gt;1.6 继承&lt;/p&gt;
&lt;p&gt;1.6.1 “是一个”&lt;code&gt;（is-a）&lt;/code&gt;与“像是一个”&lt;code&gt;（is-like-a）&lt;/code&gt;关系&lt;/p&gt;
&lt;p&gt;1.7 伴随多态的可互换对象&lt;/p&gt;
&lt;p&gt;1.8 单根继承结构&lt;/p&gt;
&lt;p&gt;1.9 容器&lt;/p&gt;
&lt;p&gt;1.9.1 参数化类型（范型）&lt;/p&gt;
&lt;p&gt;1.10 对象的创建和生命期&lt;/p&gt;
&lt;p&gt;1.11 异常处理：处理错误&lt;/p&gt;
&lt;p&gt;1.12 并发编程&lt;/p&gt;
&lt;p&gt;1.13 &lt;code&gt;Java&lt;/code&gt;与&lt;code&gt;Internet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.13.1 &lt;code&gt;Web&lt;/code&gt;是什么&lt;/p&gt;
&lt;p&gt;1.13.2客户端编程&lt;/p&gt;
&lt;p&gt;1.13.3 服务器端编程&lt;/p&gt;
&lt;p&gt;1.22 总结&lt;/p&gt;
&lt;p&gt;第2章 一切都是对象&lt;/p&gt;
&lt;p&gt;2.1 用引用操纵对象&lt;/p&gt;
&lt;p&gt;2.2 必须由你创建所有对象&lt;/p&gt;
&lt;p&gt;2.2.1 存储到什么地方&lt;/p&gt;
&lt;p&gt;2.2.2 特例：基本类型&lt;/p&gt;
&lt;p&gt;2.2.3 &lt;code&gt;Java&lt;/code&gt;中的数组&lt;/p&gt;
&lt;p&gt;2.3 永远不需要销毁对象&lt;/p&gt;
&lt;p&gt;2.3.1 作用域&lt;/p&gt;
&lt;p&gt;2.3.2 对象的作用域&lt;/p&gt;
&lt;p&gt;2.4 创建新的数据类型：类&lt;/p&gt;
&lt;p&gt;2.4.1 域和方法&lt;/p&gt;
&lt;p&gt;2.4.2 基本成员默认值&lt;/p&gt;
&lt;p&gt;2.5 方法、参数和返回值&lt;/p&gt;
&lt;p&gt;2.5.1 参数列表&lt;/p&gt;
&lt;p&gt;2.6 构建一个Java程序&lt;/p&gt;
&lt;p&gt;2.6.1 名字可见性&lt;/p&gt;
&lt;p&gt;2.6.2 运用其他构件&lt;/p&gt;
&lt;p&gt;2.6.3 &lt;code&gt;static&lt;/code&gt;关键字&lt;/p&gt;
&lt;p&gt;2.7 你的第一个&lt;code&gt;Java&lt;/code&gt;程序 编译和运行&lt;/p&gt;
&lt;p&gt;2.8 注释和嵌入式文档&lt;/p&gt;
&lt;p&gt;2.8.1 注释文档&lt;/p&gt;
&lt;p&gt;2.8.2 语法&lt;/p&gt;
&lt;p&gt;2.8.3 嵌入式&lt;code&gt;HTML&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.8.4 一些标签示例&lt;/p&gt;
&lt;p&gt;2.8.5 文档示例&lt;/p&gt;
&lt;p&gt;2.9 编码风格&lt;/p&gt;
&lt;p&gt;2.10 总结&lt;/p&gt;
&lt;p&gt;2.11 练习&lt;/p&gt;
&lt;p&gt;第3章 操作符&lt;/p&gt;
&lt;p&gt;3.1 更简单的打印语句&lt;/p&gt;
&lt;p&gt;3.2 使用Java操作符&lt;/p&gt;
&lt;p&gt;3.3 优先级&lt;/p&gt;
&lt;p&gt;3.4 赋值&lt;/p&gt;
&lt;p&gt;3.4.1 方法调用中的别名问题&lt;/p&gt;
&lt;p&gt;3.5 算术操作符&lt;/p&gt;
&lt;p&gt;3.5.1 一元加、减操作符&lt;/p&gt;
&lt;p&gt;3.6 自动递增和递减&lt;/p&gt;
&lt;p&gt;3.7 关系操作符&lt;/p&gt;
&lt;p&gt;3.7.1 测试对象的等价性&lt;/p&gt;
&lt;p&gt;3.8 逻辑操作符&lt;/p&gt;
&lt;p&gt;3.8.1 短路&lt;/p&gt;
&lt;p&gt;3.9 直接常量&lt;/p&gt;
&lt;p&gt;3.9.1 指数记数法&lt;/p&gt;
&lt;p&gt;3.10 按位操作符&lt;/p&gt;
&lt;p&gt;3.11 移位操作符&lt;/p&gt;
&lt;p&gt;3.12 三元操作符 if-else&lt;/p&gt;
&lt;p&gt;3.13 字符串操作符 + 和 +=&lt;/p&gt;
&lt;p&gt;3.14 使用操作符时常犯的错误&lt;/p&gt;
&lt;p&gt;3.15 类型转换操作符&lt;/p&gt;
&lt;p&gt;3.15.1 截尾和舍入&lt;/p&gt;
&lt;p&gt;3.15.2提升&lt;/p&gt;
&lt;p&gt;3.16 Java没有“sizeof”&lt;/p&gt;
&lt;p&gt;3.17 操作符小结&lt;/p&gt;
&lt;p&gt;3.18 总结&lt;/p&gt;
&lt;p&gt;第4章 控制执行流程&lt;/p&gt;
&lt;p&gt;4.1 true和false&lt;/p&gt;
&lt;p&gt;4.2 if-else&lt;/p&gt;
&lt;p&gt;4.3 迭代&lt;/p&gt;
&lt;p&gt;4.3.1 do-while&lt;/p&gt;
&lt;p&gt;4.3.2 for&lt;/p&gt;
&lt;p&gt;4.3.3 逗号操作符&lt;/p&gt;
&lt;p&gt;4.4 Foreach语法&lt;/p&gt;
&lt;p&gt;4.5 return&lt;/p&gt;
&lt;p&gt;4.6 break和 continue&lt;/p&gt;
&lt;p&gt;4.7 臭名昭著的“goto”&lt;/p&gt;
&lt;p&gt;4.8 switch&lt;/p&gt;
&lt;p&gt;4.9 总结&lt;/p&gt;
&lt;p&gt;第5章 初始化与清理&lt;/p&gt;
&lt;p&gt;5.1 用构造器确保初始化&lt;/p&gt;
&lt;p&gt;5.2 方法重载&lt;/p&gt;
&lt;p&gt;5.2.1 区分重载方法&lt;/p&gt;
&lt;p&gt;5.2.2 涉及基本类型的重载&lt;/p&gt;
&lt;p&gt;5.2.3 以返回值区分重载方法&lt;/p&gt;
&lt;p&gt;5.3 缺省构造器&lt;/p&gt;
&lt;p&gt;5.4 this关键字&lt;/p&gt;
&lt;p&gt;5.4.1 在构造器中调用构造器&lt;/p&gt;
&lt;p&gt;5.4.2 static的含义&lt;/p&gt;
&lt;p&gt;5.5 清理：终结处理和垃圾回收&lt;/p&gt;
&lt;p&gt;5.5.1 finalize()的用途何在&lt;/p&gt;
&lt;p&gt;5.5.2 你必须实施清理&lt;/p&gt;
&lt;p&gt;5.5.3 终结条件&lt;/p&gt;
&lt;p&gt;5.5.4 垃圾回收器如何工作&lt;/p&gt;
&lt;p&gt;5.6 成员初始化&lt;/p&gt;
&lt;p&gt;5.6.1 指定初始化&lt;/p&gt;
&lt;p&gt;5.7 构造器初始化&lt;/p&gt;
&lt;p&gt;5.7.1 初始化顺序&lt;/p&gt;
&lt;p&gt;5.7.2. 静态数据的初始化&lt;/p&gt;
&lt;p&gt;5.7.3. 显式的静态初始化&lt;/p&gt;
&lt;p&gt;5.7.4. 非静态实例初始化&lt;/p&gt;
&lt;p&gt;5.8 数组初始化&lt;/p&gt;
&lt;p&gt;5.8.1 可变参数列表&lt;/p&gt;
&lt;p&gt;5.9 枚举类型&lt;/p&gt;
&lt;p&gt;5.10 总结&lt;/p&gt;
&lt;p&gt;第6章 访问权限控制&lt;/p&gt;
&lt;p&gt;第7章 复用类&lt;/p&gt;
&lt;p&gt;第8章 多态&lt;/p&gt;
&lt;p&gt;第9章 接口&lt;/p&gt;
&lt;p&gt;第10章 内部类&lt;/p&gt;
&lt;p&gt;第11章 持有对象&lt;/p&gt;
&lt;p&gt;第12章 通过异常处理错误&lt;/p&gt;
&lt;p&gt;第13章 字符串&lt;/p&gt;
&lt;p&gt;第14章 类型信息&lt;/p&gt;
&lt;p&gt;第15章 泛型&lt;/p&gt;
&lt;p&gt;第16章 数组&lt;/p&gt;
&lt;p&gt;第17章 容器深入研究&lt;/p&gt;
&lt;p&gt;第18章 Java I/O系统&lt;/p&gt;
&lt;p&gt;第19章 枚举类型&lt;/p&gt;
&lt;p&gt;第20章 注解&lt;/p&gt;
&lt;p&gt;第21章 并发&lt;/p&gt;
&lt;p&gt;第22章 图形化用户界面&lt;/p&gt;
&lt;p&gt;附录A 补充材料&lt;/p&gt;</summary><category term="Linux书籍"></category></entry><entry><title>汇编语言王爽PDF版下载</title><link href="http://www.yanyulin.info/pages/2014/03/assemble.html" rel="alternate"></link><updated>2014-03-22T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-22:pages/2014/03/assemble.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;a href="http://pan.baidu.com/s/1eQ9UKvg" target="_blank"&gt;
汇编语言PDF下载
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载密码: &lt;code&gt;u77i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;王爽，著名计算机科学教育家，哲学家，1975年出生于黑龙江省齐齐哈尔市，1997年毕业于宁夏大学计算机科学及应用专业，2007年开创了可行性哲学理论体系。从1999年起，陆续提出并实践了知识屏蔽、线索化、多元环境、可持续性发展能力培养、纯公益教育体系等一系列对我国教育事业的发展具有基础意义与启示意义的思想与理论。2005年到2012年，建立了“三个一工程”等多项旨在培养计算机专业学习者核心专业能力和综合素质的大型教育公益事业，王爽老师多年以来一直积极致力于推动教育发展的各项事业，是我国计算机专业领域的教育公益事业的开启者与多项大型教育公益事业的建立者。从2005年起到2012年，其在教育领域所进行的理论与实践工作，成为我国计算机专业领域的教育公益事业发展的基础&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;书评&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;汇编语言是很多相关课程（数据结构、操作系统、微机原理)的重要基础，如果想从事计算机科学方面的工作的话，汇编语言的基础是不可缺少的，本书以8086平台为基础，讲解了相关的汇编指令，对于了解底层硬件的工作原理是非常有必要的，如果想从事操作系统或者嵌入式相关的工作，本书可以作为汇编语言的入门书箱，对于应用软件的开发者来说，本书也可以帮助开发者更好的理解软件内部的工作流程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第1章 基础知识&lt;/p&gt;
&lt;p&gt;1.1 机器语言&lt;/p&gt;
&lt;p&gt;1.2 汇编语言的产生&lt;/p&gt;
&lt;p&gt;1.3 汇编语言的组成&lt;/p&gt;
&lt;p&gt;1.4 存储器&lt;/p&gt;
&lt;p&gt;1.5 指令和数据&lt;/p&gt;
&lt;p&gt;1.6 存储单元&lt;/p&gt;
&lt;p&gt;1.7 CPU对存储器的读写&lt;/p&gt;
&lt;p&gt;1.8 地址总线&lt;/p&gt;
&lt;p&gt;1.9 数据总线&lt;/p&gt;
&lt;p&gt;1.10 控制总线&lt;/p&gt;
&lt;p&gt;1.11 内存地址空间(概述)&lt;/p&gt;
&lt;p&gt;1.12 主板&lt;/p&gt;
&lt;p&gt;1.13 接口卡&lt;/p&gt;
&lt;p&gt;1.14 各类存储器芯片&lt;/p&gt;
&lt;p&gt;1.15 内存地址空间&lt;/p&gt;
&lt;p&gt;第2章 寄存器&lt;/p&gt;
&lt;p&gt;2.1 通用寄存器&lt;/p&gt;
&lt;p&gt;2.2 字在寄存器中的存储&lt;/p&gt;
&lt;p&gt;2.3 几条汇编指令&lt;/p&gt;
&lt;p&gt;2.4 物理地址&lt;/p&gt;
&lt;p&gt;2.5 16位结构的CPU&lt;/p&gt;
&lt;p&gt;2.6 8086cPu给出物理地址的方法&lt;/p&gt;
&lt;p&gt;2.7 “段地址xl6+偏移地址=物理地址”的本质含义&lt;/p&gt;
&lt;p&gt;2.8 段的概念&lt;/p&gt;
&lt;p&gt;2.9 段寄存器&lt;/p&gt;
&lt;p&gt;2.10 CS和IP&lt;/p&gt;
&lt;p&gt;2.11 修改CS、IP的指令&lt;/p&gt;
&lt;p&gt;2.12 代码段&lt;/p&gt;
&lt;p&gt;实验1 查看CPU和内存，用机器指令和汇编指令编程&lt;/p&gt;
&lt;p&gt;第3章 寄存器(内存访问)&lt;/p&gt;
&lt;p&gt;3.1 内存中字的存储&lt;/p&gt;
&lt;p&gt;3.2 DS 31：1[address]&lt;/p&gt;
&lt;p&gt;3.3 字的传送&lt;/p&gt;
&lt;p&gt;3.4 ITIOV、add、sub指令&lt;/p&gt;
&lt;p&gt;3.5 数据段&lt;/p&gt;
&lt;p&gt;3.6 栈&lt;/p&gt;
&lt;p&gt;3.7 CPU提供的栈机制&lt;/p&gt;
&lt;p&gt;3.8 栈顶超界的问题&lt;/p&gt;
&lt;p&gt;3.9 puSh、pop指令&lt;/p&gt;
&lt;p&gt;3.10 栈段&lt;/p&gt;
&lt;p&gt;实验2 用机器指令和汇编指令编程&lt;/p&gt;
&lt;p&gt;第4章 第一个程序&lt;/p&gt;
&lt;p&gt;4.1 一个源程序从写出到执行的过程&lt;/p&gt;
&lt;p&gt;4.2 源程序&lt;/p&gt;
&lt;p&gt;4.3 编辑源程序&lt;/p&gt;
&lt;p&gt;4.4 编译&lt;/p&gt;
&lt;p&gt;4.5 连接&lt;/p&gt;
&lt;p&gt;4.6 以简化的方式进行编译和连接&lt;/p&gt;
&lt;p&gt;4.7 1.exe的执行&lt;/p&gt;
&lt;p&gt;4.8 谁将可执行文件中的程序装载进入内存并使它运行?&lt;/p&gt;
&lt;p&gt;4.9 程序执行过程的跟踪&lt;/p&gt;
&lt;p&gt;实验3 编程、编译、连接、跟踪&lt;/p&gt;
&lt;p&gt;第5章 【BX】和loop指令&lt;/p&gt;
&lt;p&gt;5.1 【BX】&lt;/p&gt;
&lt;p&gt;5.2 Loop指令&lt;/p&gt;
&lt;p&gt;5.3 在Debu9中跟踪用loop指令实现酮循环程序&lt;/p&gt;
&lt;p&gt;5.4 Debu9和汇编编译器masm对指令的不同处理&lt;/p&gt;
&lt;p&gt;5.5 loop和【bx】的联合应用&lt;/p&gt;
&lt;p&gt;第6章 包含多个段的程序&lt;/p&gt;
&lt;p&gt;第7章 更灵活的定位内存地址的方法&lt;/p&gt;
&lt;p&gt;第8章 数据处理的两个基本问题&lt;/p&gt;
&lt;p&gt;第9章 转移指令的原理&lt;/p&gt;
&lt;p&gt;第10章 CALL和RET指令&lt;/p&gt;
&lt;p&gt;第11章 标志寄存器&lt;/p&gt;
&lt;p&gt;第12章 内中断&lt;/p&gt;
&lt;p&gt;第13章 &lt;code&gt;int&lt;/code&gt;指令&lt;/p&gt;
&lt;p&gt;第14章 端口&lt;/p&gt;
&lt;p&gt;第15章 外中断&lt;/p&gt;
&lt;p&gt;第16章 直接定址表&lt;/p&gt;
&lt;p&gt;第17章 使用BIOS进行键盘输入和磁盘读写&lt;/p&gt;
&lt;p&gt;综合研究&lt;/p&gt;
&lt;p&gt;附注&lt;/p&gt;</summary><category term="操作系统"></category></entry><entry><title>Linux内核完全剖析PDF版下载</title><link href="http://www.yanyulin.info/pages/2014/03/kernel_analyze.html" rel="alternate"></link><updated>2014-03-22T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-22:pages/2014/03/kernel_analyze.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;a href="http://pan.baidu.com/s/1D0IhK" target="_blank"&gt;
http://pan.baidu.com/s/1D0IhK
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载密码: &lt;code&gt;7j0y&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Linux内核完全剖析，第一版是基于Linux 0.11版本，个人觉的无论操作系统发展到什么年代，其最底层的实现思想基本都是类似，就算不类似，也是在其基础之上的不断进化，因此要想真正的搞懂操作系统内部的实现的原理，我非常推荐大家看一下这本书，同时也推荐大家看一下&lt;a href="http://www.yanyulin.info/pages/2014/03/write_os.html" target="_blank"&gt;自已动手写操作系统&lt;/a&gt;这本书，Linux内核完全部析正如书名所写，书中主要介绍的是Linux内核相关的知识，如保护模式及其编程，Linux文件系统，字符设备驱动程序，块设备驱动程序等等，总之，强烈推荐每一个想了解Linux系统内部是如何实现的人都看一下...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第1章概述&lt;/p&gt;
&lt;p&gt;1.1 Linux的诞生和发展&lt;/p&gt;
&lt;p&gt;1.1.1 UNIX操作系统的诞生&lt;/p&gt;
&lt;p&gt;1.1.2 MINIX操作系统&lt;/p&gt;
&lt;p&gt;1.1.3 GNU计划&lt;/p&gt;
&lt;p&gt;1.1.4 POSIX标准&lt;/p&gt;
&lt;p&gt;1.1.5 Linux操作系统的诞生&lt;/p&gt;
&lt;p&gt;1.1.6 L,inux操作系统版本的变迁&lt;/p&gt;
&lt;p&gt;1.1.7 Linux名称的由来&lt;/p&gt;
&lt;p&gt;1.1.8早期Linux系统开发的主要贡献者&lt;/p&gt;
&lt;p&gt;1.2内容综述&lt;/p&gt;
&lt;p&gt;第2章微型计算机组成结构&lt;/p&gt;
&lt;p&gt;2.1微型计算机组成原理&lt;/p&gt;
&lt;p&gt;2.2 I/O端口寻址和访问控制方式&lt;/p&gt;
&lt;p&gt;2.2.1 I/O端口和寻址&lt;/p&gt;
&lt;p&gt;2.2.2 接口访问控制&lt;/p&gt;
&lt;p&gt;2.3 主存储器、BIOS和CMOS存储器&lt;/p&gt;
&lt;p&gt;2.3.1 主存储器&lt;/p&gt;
&lt;p&gt;2.3.2 基本输入偷出程序&lt;/p&gt;
&lt;p&gt;2.3.3 CMOS存储器&lt;/p&gt;
&lt;p&gt;2.4 控制器和控制卡&lt;/p&gt;
&lt;p&gt;2.4.1 中断控制器&lt;/p&gt;
&lt;p&gt;2.4.2 DMA控制器&lt;/p&gt;
&lt;p&gt;2.4.3 定时/计数器&lt;/p&gt;
&lt;p&gt;2.4.4 键盘控制器&lt;/p&gt;
&lt;p&gt;2.4.5 串行控制卡&lt;/p&gt;
&lt;p&gt;2.4.6 显示控制&lt;/p&gt;
&lt;p&gt;2.4.7 软盘和硬盘控制器&lt;/p&gt;
&lt;p&gt;第3章 内核编程语言和环境&lt;/p&gt;
&lt;p&gt;3.1 as86汇编器&lt;/p&gt;
&lt;p&gt;3.1.1 as86汇编语言语法&lt;/p&gt;
&lt;p&gt;3.1.2 as86汇编语言程序&lt;/p&gt;
&lt;p&gt;3.1.3 as86汇编语言程序的编译和链接&lt;/p&gt;
&lt;p&gt;3.1.4 as86和ld86使用方法和选项&lt;/p&gt;
&lt;p&gt;3.2 GNU as汇编&lt;/p&gt;
&lt;p&gt;3.2.1 编译AS汇编语言程序&lt;/p&gt;
&lt;p&gt;3.2.2 aS汇编语法&lt;/p&gt;
&lt;p&gt;3.2.3 指令语句、操作数和寻址&lt;/p&gt;
&lt;p&gt;3.2.4 区与重定位&lt;/p&gt;
&lt;p&gt;3.2.5 符号&lt;/p&gt;
&lt;p&gt;3.2.6 aS汇编命令&lt;/p&gt;
&lt;p&gt;3.2.7 编写16位代码&lt;/p&gt;
&lt;p&gt;3.2.8 aS汇编器命令行选项&lt;/p&gt;
&lt;p&gt;3.3 C语言程序&lt;/p&gt;
&lt;p&gt;3.3.1 C程序编译和链接&lt;/p&gt;
&lt;p&gt;3.3.2 嵌入汇编&lt;/p&gt;
&lt;p&gt;3.3.3 圆括号中的组合语句&lt;/p&gt;
&lt;p&gt;3.3.4 寄存器变量&lt;/p&gt;
&lt;p&gt;3.3.5 内联函数&lt;/p&gt;
&lt;p&gt;3.4 C与汇编程序的相互调用&lt;/p&gt;
&lt;p&gt;3.4.1 C函数调用机制&lt;/p&gt;
&lt;p&gt;3.4.2在汇编程序中调用C函数&lt;/p&gt;
&lt;p&gt;3.4.3在C程序中调用汇编函数&lt;/p&gt;
&lt;p&gt;3.5 Linux/0.11目标文件格式&lt;/p&gt;
&lt;p&gt;3.5.1 目标文件格式&lt;/p&gt;
&lt;p&gt;3.5.2 Linux 0.11中的目标文件格式&lt;/p&gt;
&lt;p&gt;3.5.3 链接程序输出&lt;/p&gt;
&lt;p&gt;3.5.4 链接程序预定义变量&lt;/p&gt;
&lt;p&gt;3.5.5 System.map文件&lt;/p&gt;
&lt;p&gt;3.6 Make程序和Makefile文件&lt;/p&gt;
&lt;p&gt;第4章&lt;/p&gt;
&lt;p&gt;4.1 80x86 系统寄存器和系统指令&lt;/p&gt;
&lt;p&gt;4.1.1 标志寄存器&lt;/p&gt;
&lt;p&gt;4.1.2 内存管理寄存器&lt;/p&gt;
&lt;p&gt;4.1.3 控制寄存器&lt;/p&gt;
&lt;p&gt;4.1.4 系统指令&lt;/p&gt;
&lt;p&gt;4.2.1 内存寻址&lt;/p&gt;
&lt;p&gt;4.2.2 地址变换&lt;/p&gt;
&lt;p&gt;4.2.3 保护&lt;/p&gt;
&lt;p&gt;4.3.1 段的定义&lt;/p&gt;
&lt;p&gt;4.3.2 段描述符表&lt;/p&gt;
&lt;p&gt;4.3.3 段选择符&lt;/p&gt;
&lt;p&gt;4.3.4 段描述符&lt;/p&gt;
&lt;p&gt;4.3.5 代码和数据段描述符类型&lt;/p&gt;
&lt;p&gt;4.3.6 系统描述符类型&lt;/p&gt;
&lt;p&gt;4.4 分页机制&lt;/p&gt;
&lt;p&gt;4.4.1 页表结构
4.4.2 页表项格式&lt;/p&gt;
&lt;p&gt;4.4.3 虚拟存储&lt;/p&gt;
&lt;p&gt;4.5 保护&lt;/p&gt;
&lt;p&gt;4.5.1 段级保护&lt;/p&gt;
&lt;p&gt;4.5.2 访问数据段时的特权级检查&lt;/p&gt;
&lt;p&gt;4.5.3 代码段之间转移控制时的特权级&lt;/p&gt;
&lt;p&gt;4.5.3 代码段之间转移控制时的特权级&lt;/p&gt;
&lt;p&gt;4.5.4 页级保护&lt;/p&gt;
&lt;p&gt;4.5.5 组合页级和段级保护&lt;/p&gt;
&lt;p&gt;4.6.1 异常和中断向量&lt;/p&gt;
&lt;p&gt;4.6.2 中断源和异常源&lt;/p&gt;
&lt;p&gt;4.6.3 异常分类&lt;/p&gt;
&lt;p&gt;4.6.4 程序或任务的重新执行&lt;/p&gt;
&lt;p&gt;4.6.5 开启和禁止中断&lt;/p&gt;
&lt;p&gt;4.6.6 异常和中断的优先级&lt;/p&gt;
&lt;p&gt;4.6.7 中断描述符表&lt;/p&gt;
&lt;p&gt;4.6.8 IDT描述符&lt;/p&gt;
&lt;p&gt;4.6.9 异常与中断处理&lt;/p&gt;
&lt;p&gt;4.6.10 中断处理任务&lt;/p&gt;
&lt;p&gt;4.6.11 错误码&lt;/p&gt;
&lt;p&gt;4.7.1 任务的结构和状态&lt;/p&gt;
&lt;p&gt;4.7.2 任务的执行&lt;/p&gt;
&lt;p&gt;4.7.3 任务管理数据结构&lt;/p&gt;
&lt;p&gt;4.7.4 任务切换&lt;/p&gt;
&lt;p&gt;4.7.5 任务链&lt;/p&gt;
&lt;p&gt;4.7.6 任务地址空间&lt;/p&gt;
&lt;p&gt;4.8.1 进入保护模式时的初始化操作&lt;/p&gt;
&lt;p&gt;4.8.2 模式切换&lt;/p&gt;
&lt;p&gt;4.9.1 多任务程序结构和工作原理&lt;/p&gt;
&lt;p&gt;4.9.2 引导启动程序boot.s&lt;/p&gt;
&lt;p&gt;4.9.3 多任务内核程序head.s&lt;/p&gt;
&lt;p&gt;第5章&lt;/p&gt;
&lt;p&gt;5.1 Linux内核模式&lt;/p&gt;
&lt;p&gt;5.2 Linux内核系统体系结构&lt;/p&gt;
&lt;p&gt;5.3.1 物理内存&lt;/p&gt;
&lt;p&gt;5.3.2 内存地址空间概念&lt;/p&gt;
&lt;p&gt;5.3.3 内存分段机制&lt;/p&gt;
&lt;p&gt;5.3.4 内存分页管理&lt;/p&gt;
&lt;p&gt;5.3.5 CPU多任务和保护方式&lt;/p&gt;
&lt;p&gt;5.3.6 虚拟地址、线性地址和物理地址&lt;/p&gt;
&lt;p&gt;5.3.7 用户申请内存的动态分配&lt;/p&gt;
&lt;p&gt;5.4.1 中断操作原理&lt;/p&gt;
&lt;p&gt;5.4.2 80x86微机的中断子系统&lt;/p&gt;
&lt;p&gt;5.4.3 中断向量表&lt;/p&gt;
&lt;p&gt;5.4.4 Linux内核的中断处理&lt;/p&gt;
&lt;p&gt;5.4.5 标志寄存器的中断标志&lt;/p&gt;
&lt;p&gt;5.5.1 系统调用接口&lt;/p&gt;
&lt;p&gt;5.5.2 系统调用处理过程&lt;/p&gt;
&lt;p&gt;5.5.3 Linux系统调用的参数传递方式&lt;/p&gt;
&lt;p&gt;5.6.1 系统时间&lt;/p&gt;
&lt;p&gt;5.6.2 系统定时&lt;/p&gt;
&lt;p&gt;5.7 Linux进程控制&lt;/p&gt;
&lt;p&gt;5.7.1 任务数据结构&lt;/p&gt;
&lt;p&gt;5.7.2 进程运行状态&lt;/p&gt;
&lt;p&gt;5.7.3 进程初始化&lt;/p&gt;
&lt;p&gt;5.7.4 创建新进程&lt;/p&gt;
&lt;p&gt;5.7.5 进程调度&lt;/p&gt;
&lt;p&gt;5.7.6 终止进程&lt;/p&gt;
&lt;p&gt;5.8.1 初始化阶段&lt;/p&gt;
&lt;p&gt;5.8.2 任务的堆栈&lt;/p&gt;
&lt;p&gt;5.8.3 任务内核态堆栈与用户态堆栈之&lt;/p&gt;
&lt;p&gt;5.9 Linux 0.12采用的文件系统&lt;/p&gt;
&lt;p&gt;5.10.1 内核主目录linux&lt;/p&gt;
&lt;p&gt;5.10.2 引导启动程序目录boot&lt;/p&gt;
&lt;p&gt;5.10.3 文件系统目录fs&lt;/p&gt;
&lt;p&gt;5.10.4 头文件主目录include&lt;/p&gt;
&lt;p&gt;5.10.5 内核初始化程序目录init&lt;/p&gt;
&lt;p&gt;5.10.6 内核程序主目录kernel&lt;/p&gt;
&lt;p&gt;5.10.7 内核库函数目录lib&lt;/p&gt;
&lt;p&gt;5.10.8 内存管理程序目录mm&lt;/p&gt;
&lt;p&gt;5.10.9 编译内核工具程序目录tools&lt;/p&gt;
&lt;p&gt;5.11 内核系统与应用程序的关系&lt;/p&gt;
&lt;p&gt;5.12.1 功能描述&lt;/p&gt;
&lt;p&gt;5.12.2 代码注释&lt;/p&gt;
&lt;p&gt;5.13 本章小结&lt;/p&gt;
&lt;p&gt;.....&lt;/p&gt;
&lt;p&gt;第11章&lt;/p&gt;
&lt;p&gt;11.1 总体功能描述&lt;/p&gt;
&lt;p&gt;11.1.1 浮点数据类型&lt;/p&gt;
&lt;p&gt;11.1.2 数学协处理器功能和结构&lt;/p&gt;
&lt;p&gt;11.2.1 功能描述&lt;/p&gt;
&lt;p&gt;11.2.2 代码注释&lt;/p&gt;
&lt;p&gt;第14章&lt;/p&gt;
&lt;p&gt;14.1 include目录下的文件&lt;/p&gt;
&lt;p&gt;14.2.1 功能描述&lt;/p&gt;
&lt;p&gt;14.2.2 代码注释&lt;/p&gt;
&lt;p&gt;14.2.3 a.out执行文件格式&lt;/p&gt;
&lt;p&gt;14.3 const.h文件&lt;/p&gt;</summary><category term="Linux书籍"></category></entry><entry><title>自已动手写操作系统PDF版下载</title><link href="http://www.yanyulin.info/pages/2014/03/write_os.html" rel="alternate"></link><updated>2014-03-19T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-19:pages/2014/03/write_os.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;a href="http://pan.baidu.com/s/1pJGxVw3" target="_blank"&gt;
自已动手写操作系统PDF版下载
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载密码: &lt;code&gt;lqdo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;自已动手写操作系统是一本很不错的书，个人强烈推荐大家看一下，如果要想真正了解一下什么是操作系统，操作系统内部是怎么实现的，想实际运用一下汇编指令，以及了解操作系统中的多线程实现机制，操作系统里的中断机制，此书都是一本&lt;code&gt;很不错&lt;/code&gt;的书，如果你正在看Linux方面的书，如内核方面的，Linux内核本身就是非常枯燥的，那我也推荐你看一下这本书，只要你认认真真看完这本书后，再去看内核方面的书，我相信有很多不懂的地方也自然就懂了，如果按照书上写的，可以自已写一个无界面的小型操作系统，当你完成时，自已将书中的代码输入计算机中，并且成功执行，你也会有一种成就感...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第1章 马上动手写一个最小的“操作系统”1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.1 准备工作1&lt;/p&gt;
&lt;p&gt;1.2 10分钟完成的操作系统1&lt;/p&gt;
&lt;p&gt;1.3 Boot Sector3&lt;/p&gt;
&lt;p&gt;1.4 代码解释3&lt;/p&gt;
&lt;p&gt;1.5 水面下的冰山5&lt;/p&gt;
&lt;p&gt;1.6 回顾6&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第2章 搭建你的工作环境7&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.1 虚拟计算机(Virtual PC)7&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.1.1 Virtual PC初体验8&lt;/p&gt;
&lt;p&gt;2.1.2 创建你的第一个Virtual PC9&lt;/p&gt;
&lt;p&gt;2.1.3 虚拟软盘研究12&lt;/p&gt;
&lt;p&gt;2.1.4 虚拟软盘实战14&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.2 编译器(NASM &amp;amp; GCC)18&lt;/p&gt;
&lt;p&gt;2.3 安装虚拟Linux19&lt;/p&gt;
&lt;p&gt;2.4 在虚拟Linux上访问Windows文件夹26&lt;/p&gt;
&lt;p&gt;2.5 安装虚拟PCDOS26&lt;/p&gt;
&lt;p&gt;2.6 其他要素29&lt;/p&gt;
&lt;p&gt;2.7 Bochs29&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.7.1 Bochs vs. Virtual PC vs. VMware30&lt;/p&gt;
&lt;p&gt;2.7.2 Bochs的使用方法31&lt;/p&gt;
&lt;p&gt;2.7.3 用Bochs进行调试33&lt;/p&gt;
&lt;p&gt;2.7.4 在Linux上开发34&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.8 总结与回顾36&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第3章 保护模式(Protect Mode)37&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.1 认识保护模式37&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.1.1 GDT(Global Descriptor Table) 42&lt;/p&gt;
&lt;p&gt;3.1.2 实模式到保护模式，不一般的jmp45&lt;/p&gt;
&lt;p&gt;3.1.3 描述符属性47&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.2 保护模式进阶50&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.2.1 海阔凭鱼跃50&lt;/p&gt;
&lt;p&gt;3.2.2 LDT(Local Descriptor Table)58&lt;/p&gt;
&lt;p&gt;3.2.3 特权级62&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.3 页式存储82&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.3.1 分页机制概述83&lt;/p&gt;
&lt;p&gt;3.3.2 编写代码启动分页机制84&lt;/p&gt;
&lt;p&gt;3.3.3 PDE和PTE85&lt;/p&gt;
&lt;p&gt;3.3.4 cr388&lt;/p&gt;
&lt;p&gt;3.3.5 回头看代码88&lt;/p&gt;
&lt;p&gt;3.3.6 克勤克俭用内存90&lt;/p&gt;
&lt;p&gt;3.3.7 进一步体会分页机制100&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.4 中断和异常107&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.4.1 中断和异常机制109&lt;/p&gt;
&lt;p&gt;3.4.2 外部中断111&lt;/p&gt;
&lt;p&gt;3.4.3 编程操作8259A113&lt;/p&gt;
&lt;p&gt;3.4.4 建立IDT116&lt;/p&gt;
&lt;p&gt;3.4.5 实现一个中断117&lt;/p&gt;
&lt;p&gt;3.4.6 时钟中断试验119&lt;/p&gt;
&lt;p&gt;3.4.7 几点额外说明121&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.5 保护模式下的I/O122&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.5.1 IOPL122&lt;/p&gt;
&lt;p&gt;3.5.2 I/O许可位图(I/O Permission Bitmap)123&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.6 保护模式小结123&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第4章 让操作系统走进保护模式125&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4.1 突破512字节的限制125&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4.1.1 FAT12126&lt;/p&gt;
&lt;p&gt;4.1.2 DOS可以识别的引导盘131&lt;/p&gt;
&lt;p&gt;4.1.3 一个最简单的Loader132&lt;/p&gt;
&lt;p&gt;4.1.4 加载Loader入内存133&lt;/p&gt;
&lt;p&gt;4.1.5 向Loader交出控制权142&lt;/p&gt;
&lt;p&gt;4.1.6 整理boot.asm142&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;4.2 保护模式下的“操作系统”144&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第5章 内核雏形146&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;5.1 用NASM在Linux下写Hello World146&lt;/p&gt;
&lt;p&gt;5.2 再进一步，汇编和C同步使用148&lt;/p&gt;
&lt;p&gt;5.3 ELF(Executable and Linkable Format)150&lt;/p&gt;
&lt;p&gt;5.4 从Loader到内核155&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;5.4.1 用Loader加载ELF155&lt;/p&gt;
&lt;p&gt;5.4.2 跳入保护模式161&lt;/p&gt;
&lt;p&gt;5.4.3 重新放置内核170&lt;/p&gt;
&lt;p&gt;5.4.4 向内核交出控制权175&lt;/p&gt;
&lt;p&gt;5.4.5 操作系统的调试方法176&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;5.5 扩充内核184&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;5.5.1 切换堆栈和GDT184&lt;/p&gt;
&lt;p&gt;5.5.2 整理我们的文件夹191&lt;/p&gt;
&lt;p&gt;5.5.3 Makefile191&lt;/p&gt;
&lt;p&gt;5.5.4 添加中断处理200&lt;/p&gt;
&lt;p&gt;5.5.5 两点说明218&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;5.6 小结219&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第6章 进程221&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6.1 迟到的进程221&lt;/p&gt;
&lt;p&gt;6.2 概述222&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6.2.1 进程介绍222&lt;/p&gt;
&lt;p&gt;6.2.2 未雨绸缪——形成进程的必要考虑222&lt;/p&gt;
&lt;p&gt;6.2.3 参考的代码224&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6.3 最简单的进程224&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6.3.1 简单进程的关键技术预测225&lt;/p&gt;
&lt;p&gt;6.3.2 第一步——ring0→ring1227&lt;/p&gt;
&lt;p&gt;6.3.3 第二步——丰富中断处理程序243&lt;/p&gt;
&lt;p&gt;6.3.4 进程体设计技巧254&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6.4 多进程256&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6.4.1 添加一个进程体256&lt;/p&gt;
&lt;p&gt;6.4.2 相关的变量和宏257&lt;/p&gt;
&lt;p&gt;6.4.3 进程表初始化代码扩充258&lt;/p&gt;
&lt;p&gt;6.4.4 LDT260&lt;/p&gt;
&lt;p&gt;6.4.5 修改中断处理程序261&lt;/p&gt;
&lt;p&gt;6.4.6 添加一个任务的步骤总结263&lt;/p&gt;
&lt;p&gt;6.4.7 号外：Minix的中断处理265&lt;/p&gt;
&lt;p&gt;6.4.8 代码回顾与整理269&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6.5 系统调用280&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6.5.1 实现一个简单的系统调用280&lt;/p&gt;
&lt;p&gt;6.5.2 get_ticks的应用286&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6.6 进程调度292&lt;/p&gt;
&lt;p&gt;6.6.1 避免对称——进程的节奏感292&lt;/p&gt;
&lt;p&gt;6.6.2 优先级调度总结300&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第7章 输入/输出系统302&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7.1 键盘302&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7.1.1 从中断开始——键盘初体验302&lt;/p&gt;
&lt;p&gt;7.1.2 AT、PS/2键盘304&lt;/p&gt;
&lt;p&gt;7.1.3 键盘敲击的过程304&lt;/p&gt;
&lt;p&gt;7.1.4 解析扫描码309&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;7.2 显示器325&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7.2.1 初识TTY325&lt;/p&gt;
&lt;p&gt;7.2.2 基本概念326&lt;/p&gt;
&lt;p&gt;7.2.3 寄存器328&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;7.3 TTY任务332&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7.3.1 TTY任务框架的搭建334&lt;/p&gt;
&lt;p&gt;7.3.2 多控制台340&lt;/p&gt;
&lt;p&gt;7.3.3 完善键盘处理346&lt;/p&gt;
&lt;p&gt;7.5.1 为进程指定TTY357&lt;/p&gt;
&lt;p&gt;7.5.2 printf()的实现358&lt;/p&gt;
&lt;p&gt;7.5.3 系统调用write()361&lt;/p&gt;
&lt;p&gt;7.5.4 使用printf()363&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;后记366&lt;/p&gt;
&lt;p&gt;参考文献369&lt;/p&gt;
&lt;p&gt;附录书中的章节和代码对照表370&lt;/p&gt;</summary><category term="操作系统"></category></entry><entry><title>剑指Offer书籍PDF下载及简介</title><link href="http://www.yanyulin.info/pages/2014/03/offer.html" rel="alternate"></link><updated>2014-03-07T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-03-07:pages/2014/03/offer.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;剑指offer PDF格式下载:&lt;a href="http://pan.baidu.com/s/1hq0wGy4" target="_blank" title="《剑指offer》"&gt;点这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载密码为&lt;code&gt;t3ku&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;书评&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;剑指&lt;code&gt;offer&lt;/code&gt;一书，写的还可以，与编程之美相比，程序看起来更像是作者本人所写，编程之美上的程序代码实现个人觉的实在不怎么的，感觉就像是实习生写的，但是撇开代码的实现，光去分研其算法的思想，编程之美也算是一本好书，剑指offer一书，开篇介绍的是面试前的准备，涉及了简历、电话面试、以及现场面试，在第一章中作者给出的面试经验还是非常值的学习以及分析，特别是面试者经常犯的一些比较2的问题，如面完一面后就问工资如何，我能被录用嘛，等等，书中的后面几章均是一些算法的实现，这些算法也是面试官经常问的一些算法，对于面试者特别是应届毕业生来说，最好都要能熟练胡写出来。&lt;/p&gt;
&lt;p&gt;剑指offer--何海涛&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;内容简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;剑指Offer:名企面试官精讲典型编程题剖析了50个典型的程序员面试题，从基础知识、代码质量、解题思路、优化效率和综合能力五个方面系统整理了影响面试的5个要点。&lt;/p&gt;
&lt;p&gt;全书分为7章，主要包括面试的流程，讨论面试流程中每一环节需要注意的问题；面试需要的基础知识，从编程语言、数据结构及算法三方面总结了程序员面试的知识点；高质量的代码，讨论影响代码质量的3个要素，强调高质量的代码除了能够完成基本的功能之外，还能考虑到特殊情况并对非法输入进行合理的处理；解决面试题的思路，总结在编程面试中解决难题的常用思路。&lt;/p&gt;
&lt;p&gt;第1章 面试的流程 1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.1 面试官谈面试 1&lt;/p&gt;
&lt;p&gt;1.2 面试的三种形式 2&lt;/p&gt;
&lt;p&gt;1.2.1 电话面试 2&lt;/p&gt;
&lt;p&gt;1.2.2 共享桌面远程面试 3&lt;/p&gt;
&lt;p&gt;1.2.3 现场面试 4&lt;/p&gt;
&lt;p&gt;1.3 面试的三个环节 5&lt;/p&gt;
&lt;p&gt;1.3.1 行为面试环节 5&lt;/p&gt;
&lt;p&gt;1.3.2 技术面试环节 10&lt;/p&gt;
&lt;p&gt;1.3.3 应聘者提问环节 17&lt;/p&gt;
&lt;p&gt;1.4 本章小结 18&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第2章 面试需要的基础知识 20&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.1 面试官谈基础知识 20&lt;/p&gt;
&lt;p&gt;2.2 编程语言 22&lt;/p&gt;
&lt;p&gt;2.2.1 C++ 22&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题1：赋值运算符函数 24&lt;/p&gt;
&lt;p&gt;经典的解法，适用于初级程序员 25&lt;/p&gt;
&lt;p&gt;考虑异常安全性的解法，高级程序员必备 26&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.2.2 C# &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题2：实现Singleton模式 31&lt;/p&gt;
&lt;p&gt;不好的解法一：只适用于单线程 31&lt;/p&gt;
&lt;p&gt;不好的解法二：可用于多线程但效率不高 32&lt;/p&gt;
&lt;p&gt;可行的解法：同步锁前后两次判断 33&lt;/p&gt;
&lt;p&gt;推荐的解法一：利用静态构造函数 34&lt;/p&gt;
&lt;p&gt;推荐的解法二：按需创建实例 34&lt;/p&gt;
&lt;p&gt;解法比较 35&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.3 数据结构 36&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.3.1 数组 36&lt;/p&gt;
&lt;p&gt;面试题3：二维数组中的查找 38&lt;/p&gt;
&lt;p&gt;2.3.2 字符串 42&lt;/p&gt;
&lt;p&gt;面试题4：替换空格 44&lt;/p&gt;
&lt;p&gt;O(n2)的解法，不足以拿到Offer 45&lt;/p&gt;
&lt;p&gt;O(n)的解法，搞定Offer就靠它 46&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.3.3 链表 49&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题5：从尾到头打印链表 51&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.3.4 树 53&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题6：重建二叉树 55&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.3.5 栈和队列 58&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题7：用两个栈实现队列 59&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.4 算法和数据操作 62&lt;/p&gt;
&lt;p&gt;2.4.1 查找和排序 63&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题8：旋转数组的最小数字 66&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.4.2 递归和循环 71&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题9：斐波那契数列 73&lt;/p&gt;
&lt;p&gt;效率很低的解法，面试官不会喜欢 73&lt;/p&gt;
&lt;p&gt;面试官期待的实用解法 74&lt;/p&gt;
&lt;p&gt;O(logn)但不够实用的解法 74&lt;/p&gt;
&lt;p&gt;解法比较 75&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.4.3 位运算 77&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题10：二进制中1的个数 78&lt;/p&gt;
&lt;p&gt;可能引起死循环的解法 79&lt;/p&gt;
&lt;p&gt;常规解法 79&lt;/p&gt;
&lt;p&gt;能给面试官带来惊喜的解法 80&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.5 本章小结 82&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第3章 高质量的代码 84&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.1 面试官谈代码质量 84&lt;/p&gt;
&lt;p&gt;3.2 代码的规范性 86&lt;/p&gt;
&lt;p&gt;3.3 代码的完整性 87&lt;/p&gt;
&lt;p&gt;3.4 代码的鲁棒性 106&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题15：链表中倒数第k个结点 107&lt;/p&gt;
&lt;p&gt;面试题16：反转链表 112&lt;/p&gt;
&lt;p&gt;面试题17：合并两个排序的链表 114&lt;/p&gt;
&lt;p&gt;面试题18：树的子结构 117&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.5 本章小结 121&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第4章 解决面试题的思路 123&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题19：二叉树的镜像 125&lt;/p&gt;
&lt;p&gt;面试题20：顺时针打印矩阵 127&lt;/p&gt;
&lt;p&gt;面试题21：包含min函数的栈 132&lt;/p&gt;
&lt;p&gt;面试题22：栈的压入、弹出序列 134&lt;/p&gt;
&lt;p&gt;面试题23：从上往下打印二叉树 137&lt;/p&gt;
&lt;p&gt;面试题24：二叉搜索树的后序遍历序列 140&lt;/p&gt;
&lt;p&gt;面试题25：二叉树中和为某一值的路径 143&lt;/p&gt;
&lt;p&gt;面试题26：复杂链表的复制 147&lt;/p&gt;
&lt;p&gt;面试题27：二叉搜索树与双向链表 151&lt;/p&gt;
&lt;p&gt;面试题28：字符串的排列 154&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第5章 优化时间空间效率 160&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题29：数组中出现次数超过一半的数字 163&lt;/p&gt;
&lt;p&gt;基于Partition函数的O(n)算法 163&lt;/p&gt;
&lt;p&gt;利用数组特点的O(n)算法 165&lt;/p&gt;
&lt;p&gt;解法比较 166&lt;/p&gt;
&lt;p&gt;面试题30：最小的k个数 167&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;O(n)的算法，只当可以修改输入数组时可用 167&lt;/p&gt;
&lt;p&gt;O(nlogk)的算法，适合处理海量数据 168&lt;/p&gt;
&lt;p&gt;解法比较 169&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;面试题31：连续子数组的最大和 171&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;举例分析数组的规律 171&lt;/p&gt;
&lt;p&gt;应用动态规划法 173&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;面试题32：从1到n整数中1出现的次数 174&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不考虑效率的解法，想拿Offer有点难 174&lt;/p&gt;
&lt;p&gt;明显提高效率的解法，让面试官耳目一新 175&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;面试题33：把数组排成最小的数 177&lt;/p&gt;
&lt;p&gt;面试题34：丑数 182&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;逐个判断整数是不是丑数的解法 182&lt;/p&gt;
&lt;p&gt;创建数组保存已经找到的丑数的解法 183&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;面试题35：第一个只出现一次的字符 186&lt;/p&gt;
&lt;p&gt;面试题36：数组中的逆序对 189&lt;/p&gt;
&lt;p&gt;面试题37：两个链表的第一个公共结点 193&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第6章 面试中的各项能力 198&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6.1 面试官谈能力 198&lt;/p&gt;
&lt;p&gt;6.2 沟通能力和学习能力 200&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;沟通能力 200&lt;/p&gt;
&lt;p&gt;学习能力 200&lt;/p&gt;
&lt;p&gt;善于学习、沟通的人也善于提问 201&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6.3 知识迁移能力 203&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题38：数字在排序数组中出现的次数 204&lt;/p&gt;
&lt;p&gt;面试题39：二叉树的深度 207&lt;/p&gt;
&lt;p&gt;重复遍历结点的解法，不足以打动面试官 209&lt;/p&gt;
&lt;p&gt;只遍历结点一次的解法，正是面试官喜欢的 209&lt;/p&gt;
&lt;p&gt;面试题40：数组中只出现一次的数字 211&lt;/p&gt;
&lt;p&gt;面试题41：和为s的两个数字VS和为s的连续正数序列 214&lt;/p&gt;
&lt;p&gt;面试题42：翻转单词顺序 VS左旋转字符串 218&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6.4 抽象建模能力 222&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题43：n个骰子的点数 223&lt;/p&gt;
&lt;p&gt;基于递归求骰子点数，时间效率不够高 223&lt;/p&gt;
&lt;p&gt;基于循环求骰子点数，时间性能好 224&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;面试题44：扑克牌的顺子 226&lt;/p&gt;
&lt;p&gt;面试题45：圆圈中最后剩下的数字 228&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;经典的解法，用循环链表模拟圆圈 229&lt;/p&gt;
&lt;p&gt;创新的解法，拿到Offer不在话下 230&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6.5 发散思维能力 232&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面试题46：求1+2+…+n 233&lt;/p&gt;
&lt;p&gt;利用构造函数求解 234&lt;/p&gt;
&lt;p&gt;利用虚函数求解 234&lt;/p&gt;
&lt;p&gt;利用函数指针求解 235&lt;/p&gt;
&lt;p&gt;利用模板类型求解 236&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;面试题47：不用加减乘除做加法 237&lt;/p&gt;
&lt;p&gt;面试题48：不能被继承的类 239&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;常规的解法：把构造函数设为私有函数 239&lt;/p&gt;
&lt;p&gt;新奇的解法：利用虚拟继承 240&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6.6 本章小结 241&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第7章 两个面试案例 243&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7.1 案例一：（面试题49）把字符串转换成整数 244&lt;/p&gt;
&lt;p&gt;7.2 案例二：（面试题50）树中两个结点的最低公共祖先 252&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="面试书"></category></entry><entry><title>程序员面试宝典--欧立奇</title><link href="http://www.yanyulin.info/pages/2014/02/pbaodian.html" rel="alternate"></link><updated>2014-02-15T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2014-02-15:pages/2014/02/pbaodian.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;程序员面试宝典 PDF格式下载:&lt;a href="http://pan.baidu.com/s/1pJvypIV" target="_blank" title="《程序员面试宝典》"&gt;点这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;程序员面试宝典本书涉及的内容&lt;code&gt;较多&lt;/code&gt;，书中的测重点在程序语言上，主要关注的是面试过程中公司问起的关于程序语言方面的题目，比较适合小型的&lt;code&gt;IT&lt;/code&gt;公司，同时书中第一篇也介绍了面试前的准备，面试的流程，面试的心态，最后也给出某些公司面试过程中爱考的智力题，但是对于应该名企，该书还少了点算法，总之还是不错的，可以应付找工作。&lt;/p&gt;
&lt;p&gt;程序员面试宝典--欧立奇&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第1章 应聘求职 3&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.1 应聘渠道 3&lt;/p&gt;
&lt;p&gt;1.2 应聘流程 4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第2章 简历书写 5&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.1 简历注意事项 5&lt;/p&gt;
&lt;p&gt;2.2 简历模板 8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第3章 3种考试 13&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.1 笔试 13&lt;/p&gt;
&lt;p&gt;3.2 电话面试 15&lt;/p&gt;
&lt;p&gt;3.3 面试 16&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第4章 职业生涯发展规划 19&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4.1 缺乏工作经验的应届毕业生 19&lt;/p&gt;
&lt;p&gt;4.2 更换工作的程序员们 21&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第5章 程序设计基本概念 25&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;5.1 赋值语句 25&lt;/p&gt;
&lt;p&gt;5.2 i++ 27&lt;/p&gt;
&lt;p&gt;5.3 编程风格 29&lt;/p&gt;
&lt;p&gt;5.4 类型转换 30&lt;/p&gt;
&lt;p&gt;5.5 螺旋队列 34&lt;/p&gt;
&lt;p&gt;5.6 a、b交换 35&lt;/p&gt;
&lt;p&gt;5.7 C和C++的关系 36&lt;/p&gt;
&lt;p&gt;5.8 程序设计其他问题 37&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第6章 预处理、const与sizeof 39&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6.1 宏定义 39&lt;/p&gt;
&lt;p&gt;6.2 const 41&lt;/p&gt;
&lt;p&gt;6.3 sizeof 42&lt;/p&gt;
&lt;p&gt;6.4 内联函数和宏定义 55&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第7章 指针与引用 57&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7.1 指针基本问题 57&lt;/p&gt;
&lt;p&gt;7.2 传递动态内存 65&lt;/p&gt;
&lt;p&gt;7.3 函数指针 71&lt;/p&gt;
&lt;p&gt;7.4指针数组和数组指针73&lt;/p&gt;
&lt;p&gt;7.5 迷途指针 77&lt;/p&gt;
&lt;p&gt;7.6 指针和句柄 79&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第8章 循环、递归与概率 81&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;8.1 递归基础知识 81&lt;/p&gt;
&lt;p&gt;8.2 典型递归问题 83&lt;/p&gt;
&lt;p&gt;8.3 打靶 84&lt;/p&gt;
&lt;p&gt;8.4 字符子串 89&lt;/p&gt;
&lt;p&gt;8.5 循环语言 91&lt;/p&gt;
&lt;p&gt;8.6 0-1背包 94&lt;/p&gt;
&lt;p&gt;8.7 概率 95&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第9章 STL模板与容器 97&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;9.1 向量容器 98&lt;/p&gt;
&lt;p&gt;9.2 泛型编程 103&lt;/p&gt;
&lt;p&gt;9.3 模板 105&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第10章 面向对象 109&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;10.1 面向对象的基本概念 110&lt;/p&gt;
&lt;p&gt;10.2 类和结构 111&lt;/p&gt;
&lt;p&gt;10.3 成员变量 113&lt;/p&gt;
&lt;p&gt;10.4 构造函数和析构函数 117&lt;/p&gt;
&lt;p&gt;10.5拷贝构造函数和赋值函数 119&lt;/p&gt;
&lt;p&gt;10.6多态的概念 123&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;第11章 继承与接口 127&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;11.1 覆盖 128&lt;/p&gt;
&lt;p&gt;11.2 私有继承 130&lt;/p&gt;
&lt;p&gt;11.3 虚函数继承和虚继承 137&lt;/p&gt;
&lt;p&gt;11.4 多重继承 141&lt;/p&gt;
&lt;p&gt;11.5 检测并修改不适合的继承 142&lt;/p&gt;
&lt;p&gt;11.6 纯虚函数 146&lt;/p&gt;
&lt;p&gt;11.7 COM 148&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第12章 位运算与嵌入式编程 151&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;12.1 位制转换 151&lt;/p&gt;
&lt;p&gt;12.2 嵌入式编程 157&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第13章数据结构基础167&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;13.1 单链表 167&lt;/p&gt;
&lt;p&gt;13.2 双链表 173&lt;/p&gt;
&lt;p&gt;13.3 循环链表 176&lt;/p&gt;
&lt;p&gt;13.4 队列 177&lt;/p&gt;
&lt;p&gt;13.5 堆栈 180&lt;/p&gt;
&lt;p&gt;13.6 树 185&lt;/p&gt;
&lt;p&gt;13.7 排序 185&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第14章 字符串 203&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;14.1 整数字符串转化 203&lt;/p&gt;
&lt;p&gt;14.2 字符数组和strcpy 205&lt;/p&gt;
&lt;p&gt;14.3 数组越界 210&lt;/p&gt;
&lt;p&gt;14.4 数字流和数组声明 212&lt;/p&gt;
&lt;p&gt;14.5 字符串其他问题 213&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第15章 设计模式 219&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;15.1 设计模式 220&lt;/p&gt;
&lt;p&gt;15.2 软件工程 235&lt;/p&gt;
&lt;p&gt;15.3 C#基础 237&lt;/p&gt;
&lt;p&gt;15.4 C#继承 240&lt;/p&gt;
&lt;p&gt;15.5 C#委托 249&lt;/p&gt;
&lt;p&gt;15.6 ASP NET 251&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第16章 操作系统 257&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;16.1 进程 257&lt;/p&gt;
&lt;p&gt;16.2 图形学 259&lt;/p&gt;
&lt;p&gt;16.3内存管理261&lt;/p&gt;
&lt;p&gt;16.4 DOS、Linux、UNIX 271&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第17章 数据库与SQL语言 273&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;17.1 数据库理论 273&lt;/p&gt;
&lt;p&gt;17.2 SQL语言 276&lt;/p&gt;
&lt;p&gt;17.3 SQL语言客观题 279&lt;/p&gt;
&lt;p&gt;17.4 SQL语言主观题 282&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第18章 计算机网络及分布式系统285&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;18.1 网络结构 285&lt;/p&gt;
&lt;p&gt;18.2 TCP/IP 288&lt;/p&gt;
&lt;p&gt;18.3 SNMP 292&lt;/p&gt;
&lt;p&gt;18.4 网络其他问题 295&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第19章 英语面试 301&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;19.1 面试过程和技巧 301&lt;/p&gt;
&lt;p&gt;19.2 关于工作（About Job） 303&lt;/p&gt;
&lt;p&gt;19.3 关于个人（About Person） 308&lt;/p&gt;
&lt;p&gt;19.4 关于未来（About Future） 311&lt;/p&gt;
&lt;p&gt;19.5 其他建议（Other Tips） 312&lt;/p&gt;
&lt;p&gt;19.6 英文面试常用词汇 313&lt;/p&gt;
&lt;p&gt;19.6.1 工作经历相关词汇 313&lt;/p&gt;
&lt;p&gt;19.6.2 个人资料相关词汇 314&lt;/p&gt;
&lt;p&gt;19.6.3 个人品质相关词汇 315&lt;/p&gt;
&lt;p&gt;19.6.4 学历相关词汇 316&lt;/p&gt;
&lt;p&gt;19.6.5 离职原因相关词汇 318&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第20章 电话面试 319&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;20.1 电话面试之前的准备工作 319&lt;/p&gt;
&lt;p&gt;20.2 电话面试交流常见问题 320&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第21章 智力测试 329&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;21.1 关于数字的智力测试 329&lt;/p&gt;
&lt;p&gt;21.2 关于推理的智力测试 332&lt;/p&gt;
&lt;p&gt;21.3 关于时间的智力测试 333&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;附录A 简历模板 339&lt;/p&gt;
&lt;p&gt;附录B 面试经历总结 351&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="面试书"></category></entry><entry><title>编程珠玑(作者:John Bently)</title><link href="http://www.yanyulin.info/pages/2013/12/perl.html" rel="alternate"></link><updated>2013-12-23T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2013-12-23:pages/2013/12/perl.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;作者简介：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Jon Bentley&lt;/code&gt;世界著名计算机科学家，被誉为影响算法发展的十位大师之一。他先后任职于卡内基-梅隆大学（1976~1982）、贝尔实验室（1982~2001）和Avaya实验室（2001年至今）。在卡内基-梅隆大学担任教授期间，他培养了包括Tcl语言设计者John Ousterhout、Java语言设计者James Gosling、《算法导论》作者之一Charles Leiserson在内的许多计算机科学大家。2004年荣获Dr.Dobb's程序设计卓越奖。&lt;/p&gt;
&lt;p&gt;电子书下载地址:&lt;a href="http://pan.baidu.com/s/1pJEZU7D" target="_blank"&gt;点这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;觉的好的，请多多分享&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编程珠玑&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第一部分　基础&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第1章　开篇&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.1　一次友好的对话&lt;/p&gt;
&lt;p&gt;1.2　准确的问题描述&lt;/p&gt;
&lt;p&gt;1.3　程序设计&lt;/p&gt;
&lt;p&gt;1.4　实现概要&lt;/p&gt;
&lt;p&gt;1.5　原理&lt;/p&gt;
&lt;p&gt;1.6　习题&lt;/p&gt;
&lt;p&gt;1.7　深入阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第2章　啊哈！算法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.1　三个问题&lt;/p&gt;
&lt;p&gt;2.2　无处不在的二分搜索&lt;/p&gt;
&lt;p&gt;2.3　基本操作的威力&lt;/p&gt;
&lt;p&gt;2.4　排序&lt;/p&gt;
&lt;p&gt;2.5　原理&lt;/p&gt;
&lt;p&gt;2.6　习题&lt;/p&gt;
&lt;p&gt;2.7　深入阅读&lt;/p&gt;
&lt;p&gt;2.8　变位词程序的实现（边栏）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第3章　数据决定程序结构&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.1　一个调查程序&lt;/p&gt;
&lt;p&gt;3.2　格式信函编程&lt;/p&gt;
&lt;p&gt;3.3　一组示例&lt;/p&gt;
&lt;p&gt;3.4　结构化数据&lt;/p&gt;
&lt;p&gt;3.5　用于特殊数据的强大工具&lt;/p&gt;
&lt;p&gt;3.6　原理&lt;/p&gt;
&lt;p&gt;3.7　习题&lt;/p&gt;
&lt;p&gt;3.8　深入阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第4章　编写正确的程序&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4.1　二分搜索的挑战&lt;/p&gt;
&lt;p&gt;4.2　编写程序&lt;/p&gt;
&lt;p&gt;4.3　理解程序&lt;/p&gt;
&lt;p&gt;4.4　原理&lt;/p&gt;
&lt;p&gt;4.5　程序验证的角色&lt;/p&gt;
&lt;p&gt;4.6　习题&lt;/p&gt;
&lt;p&gt;4.7　深入阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第5章　编程小事&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;5.1　从伪代码到c程序&lt;/p&gt;
&lt;p&gt;5.2　测试工具&lt;/p&gt;
&lt;p&gt;5.3　断言的艺术&lt;/p&gt;
&lt;p&gt;5.4　自动测试&lt;/p&gt;
&lt;p&gt;5.5　计时&lt;/p&gt;
&lt;p&gt;5.6　完整的程序&lt;/p&gt;
&lt;p&gt;5.7　原理&lt;/p&gt;
&lt;p&gt;5.8　习题&lt;/p&gt;
&lt;p&gt;5.9　深入阅读&lt;/p&gt;
&lt;p&gt;5.10　调试（边栏）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;第二部分　性能&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第6章　程序性能分析&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6.1　实例研究&lt;/p&gt;
&lt;p&gt;6.2　设计层面&lt;/p&gt;
&lt;p&gt;6.3　原理&lt;/p&gt;
&lt;p&gt;6.4　习题&lt;/p&gt;
&lt;p&gt;6.5　深入阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第7章　粗略估算&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7.1　基本技巧&lt;/p&gt;
&lt;p&gt;7.2　性能估计&lt;/p&gt;
&lt;p&gt;7.3　安全系数&lt;/p&gt;
&lt;p&gt;7.4　little定律&lt;/p&gt;
&lt;p&gt;7.5　原理&lt;/p&gt;
&lt;p&gt;7.6　习题&lt;/p&gt;
&lt;p&gt;7.7　深入阅读&lt;/p&gt;
&lt;p&gt;7.8　日常生活中的速算（边栏）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第8章　算法设计技术&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;8.1　问题及简单算法&lt;/p&gt;
&lt;p&gt;8.2　两个平方算法&lt;/p&gt;
&lt;p&gt;8.3　分治算法&lt;/p&gt;
&lt;p&gt;8.4　扫描算法&lt;/p&gt;
&lt;p&gt;8.5　实际运行时间&lt;/p&gt;
&lt;p&gt;8.6　原理&lt;/p&gt;
&lt;p&gt;8.7　习题&lt;/p&gt;
&lt;p&gt;8.8　深入阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第9章　代码调优&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;9.1　典型的故事&lt;/p&gt;
&lt;p&gt;9.2　急救方案集锦&lt;/p&gt;
&lt;p&gt;9.3　大手术——二分搜索&lt;/p&gt;
&lt;p&gt;9.4　原理&lt;/p&gt;
&lt;p&gt;9.5　习题&lt;/p&gt;
&lt;p&gt;9.6　深入阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第10章　节省空间&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;10.1　关键在于简单&lt;/p&gt;
&lt;p&gt;10.2　示例问题&lt;/p&gt;
&lt;p&gt;10.3　数据空间技术&lt;/p&gt;
&lt;p&gt;10.4　代码空间技术&lt;/p&gt;
&lt;p&gt;10.5　原理&lt;/p&gt;
&lt;p&gt;10.6　习题&lt;/p&gt;
&lt;p&gt;10.7　深入阅读&lt;/p&gt;
&lt;p&gt;10.8　巨大的节省（边栏）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;第三部分　应用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第11章　排序&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;11.1　插入排序&lt;/p&gt;
&lt;p&gt;11.2　一种简单的快速排序&lt;/p&gt;
&lt;p&gt;11.3　更好的几种快速排序&lt;/p&gt;
&lt;p&gt;11.4　原理&lt;/p&gt;
&lt;p&gt;11.5　习题&lt;/p&gt;
&lt;p&gt;11.6　深入阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第12章　取样问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;12.1　问题&lt;/p&gt;
&lt;p&gt;12.2　一种解决方案&lt;/p&gt;
&lt;p&gt;12.3　设计空间&lt;/p&gt;
&lt;p&gt;12.4　原理&lt;/p&gt;
&lt;p&gt;12.5　习题&lt;/p&gt;
&lt;p&gt;12.6　深入阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第13章　搜索&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;13.1　接口&lt;/p&gt;
&lt;p&gt;13.2　线性结构&lt;/p&gt;
&lt;p&gt;13.3　二分搜索树&lt;/p&gt;
&lt;p&gt;13.4　用于整数的结构&lt;/p&gt;
&lt;p&gt;13.5　原理&lt;/p&gt;
&lt;p&gt;13.6　习题&lt;/p&gt;
&lt;p&gt;13.7　深入阅读&lt;/p&gt;
&lt;p&gt;13.8　一个实际搜索问题（边栏）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第14章　堆&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;14.1　数据结构&lt;/p&gt;
&lt;p&gt;14.2　两个关键函数&lt;/p&gt;
&lt;p&gt;14.3　优先级队列&lt;/p&gt;
&lt;p&gt;14.4　一种排序算法&lt;/p&gt;
&lt;p&gt;14.5　原理&lt;/p&gt;
&lt;p&gt;14.6　习题&lt;/p&gt;
&lt;p&gt;14.7　深入阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第15章　字符串&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;15.1　单词&lt;/p&gt;
&lt;p&gt;15.2　短语&lt;/p&gt;
&lt;p&gt;15.3　生成文本&lt;/p&gt;
&lt;p&gt;15.4　原理&lt;/p&gt;
&lt;p&gt;15.5　习题&lt;/p&gt;
&lt;p&gt;15.6　深入阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第1版跋&lt;/p&gt;
&lt;p&gt;第2版跋&lt;/p&gt;
&lt;p&gt;附录a　算法分类&lt;/p&gt;
&lt;p&gt;附录b　估算测试&lt;/p&gt;
&lt;p&gt;附录c　时空开销模型&lt;/p&gt;
&lt;p&gt;附录d　代码调优法则&lt;/p&gt;
&lt;p&gt;附录e　用于搜索的c++类&lt;/p&gt;
&lt;p&gt;部分习题提示&lt;/p&gt;
&lt;p&gt;部分习题答案&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="算法之美"></category></entry><entry><title>编程之美—微软技术面试心得</title><link href="http://www.yanyulin.info/pages/2013/12/prgbeautiful.html" rel="alternate"></link><updated>2013-12-05T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2013-12-05:pages/2013/12/prgbeautiful.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;编程之美&lt;/code&gt;收集了约&lt;code&gt;60&lt;/code&gt;道算法和程序设计题目，这些题目大部分在近年的笔试，面试中出现过，或者是被微软员工热烈讨论过。作者试图从书中各种有趣的问题出发，引导读者发现问题，&lt;code&gt;分析问题&lt;/code&gt;，解决问题，寻找更优的解法&lt;/p&gt;
&lt;p&gt;电子书下载地址:&lt;a href="http://yunpan.cn/QU98W2IsqzW8m" target="_blank"&gt;点这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;觉的好的，请多多分享&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编程之美&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第1章游戏之乐——游戏中碰到的题目 1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.1让CPU占用率曲线听你指挥 3&lt;/p&gt;
&lt;p&gt;1.2中国象棋将帅问题 13&lt;/p&gt;
&lt;p&gt;1.3一摞烙饼的排序 20&lt;/p&gt;
&lt;p&gt;1.4买书问题 30&lt;/p&gt;
&lt;p&gt;1.5快速找出故障机器 35&lt;/p&gt;
&lt;p&gt;1.6饮料供货 40&lt;/p&gt;
&lt;p&gt;1.7光影切割问题 45&lt;/p&gt;
&lt;p&gt;1.8小飞的电梯调度算法50&lt;/p&gt;
&lt;p&gt;1.9高效率地安排见面会 54&lt;/p&gt;
&lt;p&gt;1.10双线程高效下载 59&lt;/p&gt;
&lt;p&gt;1.11NIM（1）一排石头的游戏 64&lt;/p&gt;
&lt;p&gt;1.12NIM（2）“拈”游戏分析 67&lt;/p&gt;
&lt;p&gt;1.13NIM（3）两堆石头的游戏 72&lt;/p&gt;
&lt;p&gt;1.14连连看游戏设计 86&lt;/p&gt;
&lt;p&gt;1.15构造数独 91&lt;/p&gt;
&lt;p&gt;1.1624点游戏 99&lt;/p&gt;
&lt;p&gt;1.17俄罗斯方块游戏 108&lt;/p&gt;
&lt;p&gt;1.18挖雷游戏 116&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第2章数字之魅——数字中的技巧 117&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.1求二进制数中1的个数 119&lt;/p&gt;
&lt;p&gt;2.2不要被阶乘吓倒 125&lt;/p&gt;
&lt;p&gt;2.3寻找发帖“水王” 129&lt;/p&gt;
&lt;p&gt;2.41的数目 132&lt;/p&gt;
&lt;p&gt;2.5寻找最大的K个数 139&lt;/p&gt;
&lt;p&gt;2.6精确表达浮点数 147&lt;/p&gt;
&lt;p&gt;2.7最大公约数问题 150&lt;/p&gt;
&lt;p&gt;2.8找符合条件的整数 155&lt;/p&gt;
&lt;p&gt;2.9斐波那契（Fibonacci）数列 160&lt;/p&gt;
&lt;p&gt;2.10寻找数组中的最大值和最小值 166&lt;/p&gt;
&lt;p&gt;2.11寻找最近de点对 171&lt;/p&gt;
&lt;p&gt;2.12快速寻找满足条件的两个数 178&lt;/p&gt;
&lt;p&gt;2.13子数组的最大乘积 182&lt;/p&gt;
&lt;p&gt;2.14求数组的子数组之和的最大值 185&lt;/p&gt;
&lt;p&gt;2.15子数组之和的最大值（二维） 192&lt;/p&gt;
&lt;p&gt;2.16求数组中最长递增子序列 198&lt;/p&gt;
&lt;p&gt;2.17数组循环移位 204&lt;/p&gt;
&lt;p&gt;2.18数组分割 207&lt;/p&gt;
&lt;p&gt;2.19区间重合判断 211&lt;/p&gt;
&lt;p&gt;2.20程序理解和时间分析 215&lt;/p&gt;
&lt;p&gt;2.21只考加法的面试题 217&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第3章结构之法——字符串及链表的探索 219&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.1字符串移位包含的问题 221&lt;/p&gt;
&lt;p&gt;3.2电话号码对应英语单词 224&lt;/p&gt;
&lt;p&gt;3.3计算字符串的相似度 230&lt;/p&gt;
&lt;p&gt;3.4从无头单链表中删除节点 234&lt;/p&gt;
&lt;p&gt;3.5最短摘要的生成 237&lt;/p&gt;
&lt;p&gt;3.6编程判断两个链表是否相交 241&lt;/p&gt;
&lt;p&gt;3.7队列中取最大值操作问题 244&lt;/p&gt;
&lt;p&gt;3.8求二叉树中节点的最大距离 250&lt;/p&gt;
&lt;p&gt;3.9重建二叉树 256&lt;/p&gt;
&lt;p&gt;3.10分层遍历二叉树 262&lt;/p&gt;
&lt;p&gt;3.11程序改错 268&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第4章数学之趣——数学游戏的乐趣 273&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4.1金刚坐飞机问题 275&lt;/p&gt;
&lt;p&gt;4.2瓷砖覆盖地板 279&lt;/p&gt;
&lt;p&gt;4.3买票找零 282&lt;/p&gt;
&lt;p&gt;4.4点是否在三角形内 286&lt;/p&gt;
&lt;p&gt;4.5磁带文件存放优化 291&lt;/p&gt;
&lt;p&gt;4.6桶中取黑白球 294&lt;/p&gt;
&lt;p&gt;4.7蚂蚁爬杆 299&lt;/p&gt;
&lt;p&gt;4.8三角形测试用例303&lt;/p&gt;
&lt;p&gt;4.9数独知多少 307&lt;/p&gt;
&lt;p&gt;4.10数字哑谜和回文 315&lt;/p&gt;
&lt;p&gt;4.11挖雷游戏的概率 322&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="算法之美"></category></entry><entry><title>C语言深度解剖(含金量高)</title><link href="http://www.yanyulin.info/pages/2013/11/deepc.html" rel="alternate"></link><updated>2013-11-23T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2013-11-23:pages/2013/11/deepc.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;C语言深度解剖(编程的50个细节)&lt;/code&gt;这本书不太适合C语言刚入门的初学者，书中讲解了每一个关键字背后的秘密，&lt;code&gt;"十鸟在林，不如一鸟在手"&lt;/code&gt;真正把C语言整明白了再学其他语言也很简单，如果C语言都没学明白，别的语言学的再好，也不过是花架子，因为你并不理解底层是怎么个回事，本书我个人强烈推荐。&lt;/p&gt;
&lt;p&gt;电子书PDF格式下载:&lt;a href="http://yunpan.cn/QUmRc4AqnmIBE" target="_blank" title="《Effective C++》"&gt;点这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第一章 关键字&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.1 最宽恒大量的关键字auto&lt;/p&gt;
&lt;p&gt;1.2 最快的关键字register&lt;/p&gt;
&lt;p&gt;1.3 最不实名的关键字static&lt;/p&gt;
&lt;p&gt;1.4 基本数据类型&lt;/p&gt;
&lt;p&gt;1.5 最冤枉的关键字sizeof&lt;/p&gt;
&lt;p&gt;1.6 if/else组合&lt;/p&gt;
&lt;p&gt;1.7 switch/case组合&lt;/p&gt;
&lt;p&gt;1.8 do/while/for关键字&lt;/p&gt;
&lt;p&gt;1.9 goto关键字&lt;/p&gt;
&lt;p&gt;1.10 void关键字&lt;/p&gt;
&lt;p&gt;1.11 const关键字也被该被替换为readonly&lt;/p&gt;
&lt;p&gt;1.12 最易变的关键字volatile&lt;/p&gt;
&lt;p&gt;1.13 最会带帽子的关键字extern&lt;/p&gt;
&lt;p&gt;1.14 struct关键字&lt;/p&gt;
&lt;p&gt;1.15 union关键字&lt;/p&gt;
&lt;p&gt;1.16 enum关键字&lt;/p&gt;
&lt;p&gt;1.17 typedef关键字&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第二章 符号&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.1 注释符号&lt;/p&gt;
&lt;p&gt;2.2 连接符与转义符&lt;/p&gt;
&lt;p&gt;2.3 单引号、双引号&lt;/p&gt;
&lt;p&gt;2.4 逻辑运算符&lt;/p&gt;
&lt;p&gt;2.5 位运算符&lt;/p&gt;
&lt;p&gt;2.6 花括号&lt;/p&gt;
&lt;p&gt;2.7 ++/--操作符&lt;/p&gt;
&lt;p&gt;2.8 2/(-2)的值是多少?&lt;/p&gt;
&lt;p&gt;2.9 运算符的优化级&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第三章 预处理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.1 宏定义&lt;/p&gt;
&lt;p&gt;3.2 条件编译&lt;/p&gt;
&lt;p&gt;3.3 文件包含&lt;/p&gt;
&lt;p&gt;3.4 #error的处理&lt;/p&gt;
&lt;p&gt;3.5 #line预处理&lt;/p&gt;
&lt;p&gt;3.6 #pragma预处理&lt;/p&gt;
&lt;p&gt;3.7 #运算符&lt;/p&gt;
&lt;p&gt;3.8 ##预算符&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第四章 指针与数组&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4.1 指针&lt;/p&gt;
&lt;p&gt;4.2 数组&lt;/p&gt;
&lt;p&gt;4.3 指针与数组之间的恩恩怨怨&lt;/p&gt;
&lt;p&gt;4.4 指针数组与数组指针&lt;/p&gt;
&lt;p&gt;4.5 多维数组与多级指针&lt;/p&gt;
&lt;p&gt;4.6 数组参数与指针参数&lt;/p&gt;
&lt;p&gt;4.7 函数指针&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第五章 内存管理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;5.1 什么是野指针&lt;/p&gt;
&lt;p&gt;5.2 栈堆静态区&lt;/p&gt;
&lt;p&gt;5.3 常见内存错误与对策&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第六章 函数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6.1 函数的由来与好处&lt;/p&gt;
&lt;p&gt;6.2 编码风格&lt;/p&gt;
&lt;p&gt;6.3 函数设计的一般原则与技巧&lt;/p&gt;
&lt;p&gt;6.4 函数递归&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第七章 文件结构&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7.1 文件内部的一般规则&lt;/p&gt;
&lt;p&gt;7.2 文件命名的规则&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="C秘籍"></category></entry><entry><title>Effective C++(编程的50个细节)</title><link href="http://www.yanyulin.info/pages/2013/11/effective.html" rel="alternate"></link><updated>2013-11-23T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2013-11-23:pages/2013/11/effective.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;Effective C++(编程的50个细节)&lt;/code&gt;着重讲解了编写C++程序应该注意的50个细节问题，书中的每一条准则描述了一个编写出更好的C++的方式，每一个条款的背后都有具体范例支持，书中讲的都是C++的编程技巧和注意事项，很多都是自己平时不太注意但又很重要的内容，绝对经典，作者Scott Meyers是全世界最知名的C++软件开发专家之一。&lt;/p&gt;
&lt;p&gt;电子书PDF格式下载:&lt;a href="http://yunpan.cn/QUdi9Cq7G6RAZ" target="_blank" title="《Effective C++》"&gt;点这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1、从C转向C++&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;条款1:尽量用CONST和INLINE而不用#DEFINE&lt;/p&gt;
&lt;p&gt;条款2:尽量用&lt;IOSTREAM&gt;而不用&lt;STDIO.H&gt;&lt;/p&gt;
&lt;p&gt;条款3:尽量用NEW和DELETE而不用MALLOC和FREE&lt;/p&gt;
&lt;p&gt;条款4:尽量使用C++风格的注释&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2、内存管理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;条款5:对应的NEW和DELETE要采用相同的形式&lt;/p&gt;
&lt;p&gt;条款6:析构函数里对指针成员调用DELETE&lt;/p&gt;
&lt;p&gt;条款7:预先准备好内存不够的情况&lt;/p&gt;
&lt;p&gt;条款8:写OPERATOR NEW与OPERATOR DELETE要遵循常规&lt;/p&gt;
&lt;p&gt;条款9:避免隐藏标准形式的NEW&lt;/p&gt;
&lt;p&gt;条款10:如果写了OPERATOR NEW就要同时写OPERATOR DELETE&lt;/p&gt;
&lt;p&gt;条款11:为需要动态分配内存的类声明一个拷贝构造函数和一个赋值函数&lt;/p&gt;
&lt;p&gt;条款12:尽量使用初始化而不要在构造函数里赋值&lt;/p&gt;
&lt;p&gt;条款13:初始化列表中成员列出顺序和它们在类中的声明顺序相同&lt;/p&gt;
&lt;p&gt;条款14:确定基类有虚析构函数&lt;/p&gt;
&lt;p&gt;条款15:让OPERATOR=返回*THIS的引用&lt;/p&gt;
&lt;p&gt;条款16:在OPERATOR=中对所有数据成员赋值&lt;/p&gt;
&lt;p&gt;条款17:在OPERATOR=中检查给自已赋值的情况&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3、类和函数:设计与声明&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;条款18:争取使类的接口完整并且最小&lt;/p&gt;
&lt;p&gt;条款19:分清成员函数，非成员函数和友元函数&lt;/p&gt;
&lt;p&gt;条款20:避免PUBLIC接口出现数据成员&lt;/p&gt;
&lt;p&gt;条款21:尽可能使用CONST&lt;/p&gt;
&lt;p&gt;条款22:尽量用传引用而不用传值&lt;/p&gt;
&lt;p&gt;条款23:必须返回一个对象时不要试图返回一个引用&lt;/p&gt;
&lt;p&gt;条款24:在函数重载与设定参数默认值间慎重选择&lt;/p&gt;
&lt;p&gt;条款25:避免对指针与数字类型的重载&lt;/p&gt;
&lt;p&gt;条款26:当心潜在的二义性&lt;/p&gt;
&lt;p&gt;条款27:如果不想使用隐式生成的函数要显示的禁止它&lt;/p&gt;
&lt;p&gt;条款28:划分全局名字空间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;4、类和函数：实现&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;条款29:避免返回内部数据的句柄&lt;/p&gt;
&lt;p&gt;条款30:避免这样的成员函数，其返回值是指向成员的非CONST指针或引用&lt;/p&gt;
&lt;p&gt;条款31:千万不要返回局部对象的引用，也不要返回函数内部用NEW初始化的指针&lt;/p&gt;
&lt;p&gt;条款32:尽可能推迟变量的定义&lt;/p&gt;
&lt;p&gt;条款33:明智的使用INLINE&lt;/p&gt;
&lt;p&gt;条款34:将文件间的编译依赖性阡至最低&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;5、继承与面向对象设计&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;条款35:使公有继承体现是一个的函义&lt;/p&gt;
&lt;p&gt;条款36:区分接口继承与实现继承&lt;/p&gt;
&lt;p&gt;条款37:绝不要重新定义继承而来的非虚函数&lt;/p&gt;
&lt;p&gt;条款38:绝不要重新定义继承而来的缺省参数值&lt;/p&gt;
&lt;p&gt;条款39:避免向下转换继承层次&lt;/p&gt;
&lt;p&gt;条款40:通过分层来体现有一个和用...来实现&lt;/p&gt;
&lt;p&gt;条款41:区分继承和模板&lt;/p&gt;
&lt;p&gt;条款42:明智的使用私有继承&lt;/p&gt;
&lt;p&gt;条款43:明智的使用多继承&lt;/p&gt;
&lt;p&gt;条款44:说你想说的，理解你说的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6、杂项&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;条款45:弄清C++在幕后为你所写、所调用的函数&lt;/p&gt;
&lt;p&gt;条款46:宁可编译与链接时出错，也不要运行时出错&lt;/p&gt;
&lt;p&gt;条款47:确保非局部静态对象在使用前被初始化&lt;/p&gt;
&lt;p&gt;条款48:重视编译器警告&lt;/p&gt;
&lt;p&gt;条款49:熟悉标准库&lt;/p&gt;
&lt;p&gt;条款50:提高对C++的认识&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="C++书库"></category></entry><entry><title>STL源码剖析(候捷译)</title><link href="http://www.yanyulin.info/pages/2013/11/stlOrigin.html" rel="alternate"></link><updated>2013-11-21T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2013-11-21:pages/2013/11/stlOrigin.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;STL源码剖析 PDF格式下载:&lt;a href="http://yunpan.cn/QUj5p6EIPZH9y" target="_blank" title="《STL源码剖析》"&gt;点这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;STL源码剖析此书是一本不可多得的好书，大师的精典之作，大多数程序员只知道集合类非常好用，只需要向集合类中填加元素，不用担心空间的开设，以及空间的回收，也不用考虑集合类的效率，更重要的是集合类还给我们提供了各种各样的函数，但是知其所以然而不知其因为然，这样的程序员是不合格的，《STL源码剖析》很好的给我们讲解了集合类的底层实现，以及泛型算法。&lt;/p&gt;
&lt;p&gt;STL源码剖析&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前言&lt;/p&gt;
&lt;p&gt;第1章STL概论与版本简介&lt;/p&gt;
&lt;p&gt;第2章 空间配置器（allocator）&lt;/p&gt;
&lt;p&gt;第3章迭代器（iterators）概念与traits编程技法&lt;/p&gt;
&lt;p&gt;第4章 序列式容器（sequence containers）&lt;/p&gt;
&lt;p&gt;第5章 关联式容器（associattive containers）&lt;/p&gt;
&lt;p&gt;第6章 算法（algorithms）&lt;/p&gt;
&lt;p&gt;第7章 仿函数（functors，另名 函数对象function objects）&lt;/p&gt;
&lt;p&gt;第8章 配接器（adapters）&lt;/p&gt;
&lt;p&gt;附录A 参考书籍与推荐读物&lt;/p&gt;
&lt;p&gt;附录B 候捷网站（本书支持站点简介）&lt;/p&gt;
&lt;p&gt;附录C STLPort 的移植经验（by孟岩&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="C++书库"></category></entry><entry><title>深度探索C++对象模型</title><link href="http://www.yanyulin.info/pages/2013/11/objectModel.html" rel="alternate"></link><updated>2013-11-18T00:00:00+08:00</updated><author><name>烟雨林</name></author><id>tag:www.yanyulin.info,2013-11-18:pages/2013/11/objectModel.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;电子书PDF格式下载:&lt;a href="http://yunpan.cn/QUK3HwIaW6tu2" target="_blank" title="《深度探索C++对象模型》"&gt;点这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第0章 导读（译者的话）&lt;/p&gt;
&lt;p&gt;第1章 关于对象（Object Lessons）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.1 C++对象模型（The C++ Object Model）&lt;/p&gt;
&lt;p&gt;1.2 关键词所带来的差异（A Keyword Distinction）&lt;/p&gt;
&lt;p&gt;1.3 对象的差异（An Object Distinction）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第2章 构造函数语意学（The Semantics of constructors）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.1 Default Constructor的建构操作&lt;/p&gt;
&lt;p&gt;2.2 Copy Constructor的建构操作&lt;/p&gt;
&lt;p&gt;2.3 程序转换语意学（Program Transformation Semantics）&lt;/p&gt;
&lt;p&gt;2.4 成员们的初始化队伍（Member Initialization List）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第3章 Data语意学（The Semantics of Data）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.1 Data Member的绑定（The Binding of a Data Member）&lt;/p&gt;
&lt;p&gt;3.2 Data Member的布局（Data Member Layout）&lt;/p&gt;
&lt;p&gt;3.3 Data Member的存取&lt;/p&gt;
&lt;p&gt;3.4 “继承”与Data Member&lt;/p&gt;
&lt;p&gt;3.5 对象成员的效率（Object Member Efficiency）&lt;/p&gt;
&lt;p&gt;3.6 指向Data Members的指针（Pointer to Data Members）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第4章 Function语意学（The Semantics of Function）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4.1 Member的各种调用方式&lt;/p&gt;
&lt;p&gt;4.2 Virtual Member Functions（虚拟成员函数）&lt;/p&gt;
&lt;p&gt;4.3 函数的效能&lt;/p&gt;
&lt;p&gt;4.4 指向Member Functions的指针（Pointer-to-Member Functions）&lt;/p&gt;
&lt;p&gt;4.5 Inline Functions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第5章 构造、解构、拷贝 语意学（Semantics of Construction，Destruction，and Copy）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;5.1 无继承情况下的对象构造&lt;/p&gt;
&lt;p&gt;5.2 继承体系下的对象构造&lt;/p&gt;
&lt;p&gt;5.3 对象复制语意学（Object Copy Semantics）&lt;/p&gt;
&lt;p&gt;5.4 对象的功能（Object Efficiency）&lt;/p&gt;
&lt;p&gt;5.5 解构语意学（Semantics of Destruction）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第6章 执行期语意学（Runting Semantics）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6.1 对象的构造和解构（Object Construction and Destruction）&lt;/p&gt;
&lt;p&gt;6.2 new和delete运算符&lt;/p&gt;
&lt;p&gt;6.3 临时性对象（Temporary Objects）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第7章 站在对象模型的类端（On the Cusp of the Object Model）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7.1 Template&lt;/p&gt;
&lt;p&gt;7.2 异常处理（Exception Handling）&lt;/p&gt;
&lt;p&gt;7.3 执行期类型识别（Runtime Type Identification，RTTI）&lt;/p&gt;
&lt;p&gt;7.4 效率有了，弹性呢？&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="C++书库"></category></entry></feed>